         w __cxa_pure_virtual
         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w pthread_cancel
         w pthread_getspecific
         w pthread_key_create
         w pthread_key_delete
         w pthread_mutex_lock
         w pthread_mutex_unlock
         w pthread_setspecific
         w __register_frame_info
         w userAppExit
         w userAppInit
00000000 00000802 B __ctru_dev_utf16_buf
00000000 a shift
00000000 a shift
00000000 A __sync_synchronize
00000000 b _TLS_MODULE_BASE_
00000804 00000401 B __ctru_dev_path_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
001000ac t .udivsi3_skip_div0_test
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc T __aeabi_uldivmod
001008f8 00000014 T __restore_core_regs
001008f8 00000014 T restore_core_regs
0010090c T __gnu_Unwind_Restore_VFP
00100914 T __gnu_Unwind_Save_VFP
0010091c T __gnu_Unwind_Restore_VFP_D
00100924 T __gnu_Unwind_Save_VFP_D
0010092c T __gnu_Unwind_Restore_VFP_D_16_to_31
00100934 T __gnu_Unwind_Save_VFP_D_16_to_31
0010093c T __gnu_Unwind_Restore_WMMXD
00100980 T __gnu_Unwind_Save_WMMXD
001009c4 T __gnu_Unwind_Restore_WMMXC
001009d8 T __gnu_Unwind_Save_WMMXC
001009ec 00000024 T ___Unwind_RaiseException
001009ec 00000024 T _Unwind_RaiseException
00100a10 00000024 T ___Unwind_Resume
00100a10 00000024 T _Unwind_Resume
00100a34 00000024 T ___Unwind_Resume_or_Rethrow
00100a34 00000024 T _Unwind_Resume_or_Rethrow
00100a58 00000024 T ___Unwind_ForcedUnwind
00100a58 00000024 T _Unwind_ForcedUnwind
00100a7c 00000024 T ___Unwind_Backtrace
00100a7c 00000024 T _Unwind_Backtrace
00100aa8 00000390 T strcmp
00100e30 t __do_global_dtors_aux
00100e70 t frame_dummy
00100ea0 000007ac T main
0010164c 00000008 T b2PolygonShape::GetChildCount() const
00101654 00000090 T b2PolygonShape::TestPoint(b2Transform const&, b2Vec2 const&) const
001016e4 00000004 W b2PolygonShape::~b2PolygonShape()
001016e4 00000004 W b2PolygonShape::~b2PolygonShape()
001016e8 000000d0 T b2PolygonShape::Clone(b2BlockAllocator*) const
001017b8 00000190 T b2PolygonShape::ComputeMass(b2MassData*, float) const
00101948 000001bc T b2PolygonShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
00101b04 00000014 W b2PolygonShape::~b2PolygonShape()
00101b18 000000e0 T b2PolygonShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
00101bf8 0000006c T b2PolygonShape::SetAsBox(float, float)
00101c64 00000048 T b2BlockAllocator::b2BlockAllocator()
00101c64 00000048 T b2BlockAllocator::b2BlockAllocator()
00101cac 00000048 T b2BlockAllocator::~b2BlockAllocator()
00101cac 00000048 T b2BlockAllocator::~b2BlockAllocator()
00101cf4 000001a0 T b2BlockAllocator::Allocate(int)
00101e94 00000088 T b2BlockAllocator::Free(void*, int)
00101f1c 00000078 t _GLOBAL__sub_I__ZN16b2BlockAllocatorC2Ev
00101f94 00000004 T b2Alloc_Default(int)
00101f98 00000004 T b2Free_Default(void*)
00101f9c 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
00101f9c 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
00102244 00000004 T b2Body::~b2Body()
00102244 00000004 T b2Body::~b2Body()
00102248 0000022c T b2Body::ResetMassData()
00102474 000000d8 T b2Body::CreateFixture(b2FixtureDef const*)
0010254c 00000058 T b2Body::CreateFixture(b2Shape const*, float)
001025a4 0000006c T b2Body::ShouldCollide(b2Body const*) const
00102610 000000ec T b2Body::SynchronizeFixtures()
001026fc 00000004 W b2ContactListener::~b2ContactListener()
001026fc 00000004 W b2ContactListener::~b2ContactListener()
00102700 00000004 W b2ContactListener::BeginContact(b2Contact*)
00102704 00000004 W b2ContactListener::EndContact(b2Contact*)
00102708 00000004 W b2ContactListener::PreSolve(b2Contact*, b2Manifold const*)
0010270c 00000004 W b2ContactListener::PostSolve(b2Contact*, b2ContactImpulse const*)
00102710 00000014 W b2ContactListener::~b2ContactListener()
00102724 0000003c T b2ContactManager::b2ContactManager()
00102724 0000003c T b2ContactManager::b2ContactManager()
00102760 000000ec T b2ContactManager::Destroy(b2Contact*)
0010284c 000001d0 T b2ContactManager::Collide()
00102a1c 00000184 T b2ContactManager::AddPair(void*, void*)
00102ba0 00000208 W void b2DynamicTree::Query<b2BroadPhase>(b2BroadPhase*, b2AABB const&) const
00102da8 000001ac W void b2BroadPhase::UpdatePairs<b2ContactManager>(b2ContactManager*)
00102f54 00000010 T b2ContactManager::FindNewContacts()
00102f64 00000038 T b2Fixture::b2Fixture()
00102f64 00000038 T b2Fixture::b2Fixture()
00102f9c 000000d0 T b2Fixture::Create(b2BlockAllocator*, b2Body*, b2FixtureDef const*)
0010306c 00000138 T b2Fixture::Destroy(b2BlockAllocator*)
001031a4 000000b0 T b2Fixture::CreateProxies(b2BroadPhase*, b2Transform const&)
00103254 0000005c T b2Fixture::DestroyProxies(b2BroadPhase*)
001032b0 00000150 T b2Fixture::Synchronize(b2BroadPhase*, b2Transform const&, b2Transform const&)
00103400 000000b0 T b2World::b2World(b2Vec2 const&)
00103400 000000b0 T b2World::b2World(b2Vec2 const&)
001034b0 00000074 T b2World::~b2World()
001034b0 00000074 T b2World::~b2World()
00103524 00000080 T b2World::CreateBody(b2BodyDef const*)
001035a4 0000018c T b2World::DestroyJoint(b2Joint*)
00103730 000001b4 T b2World::DestroyBody(b2Body*)
001038e4 000004b0 T b2World::Solve(b2TimeStep const&)
00103d94 00000c34 T b2World::SolveTOI(b2TimeStep const&)
001049c8 00000198 T b2World::Step(float, int, int)
00104b60 00000004 W b2ContactFilter::~b2ContactFilter()
00104b60 00000004 W b2ContactFilter::~b2ContactFilter()
00104b64 0000005c T b2ContactFilter::ShouldCollide(b2Fixture*, b2Fixture*)
00104bc0 00000014 W b2ContactFilter::~b2ContactFilter()
00104bd4 00000058 T b2BroadPhase::b2BroadPhase()
00104bd4 00000058 T b2BroadPhase::b2BroadPhase()
00104c2c 00000028 T b2BroadPhase::~b2BroadPhase()
00104c2c 00000028 T b2BroadPhase::~b2BroadPhase()
00104c54 00000080 T b2BroadPhase::CreateProxy(b2AABB const&, void*)
00104cd4 00000050 T b2BroadPhase::DestroyProxy(int)
00104d24 0000006c T b2BroadPhase::BufferMove(int)
00104d90 00000028 T b2BroadPhase::MoveProxy(int, b2AABB const&, b2Vec2 const&)
00104db8 000000f4 T b2BroadPhase::QueryCallback(int)
00104eac 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
00104ed0 0000010c T b2DistanceProxy::Set(b2Shape const*, int)
00104fdc 000002fc W b2Simplex::ReadCache(b2SimplexCache const*, b2DistanceProxy const*, b2Transform const&, b2DistanceProxy const*, b2Transform const&)
001052d8 000000b8 T b2Simplex::Solve2()
00105390 00000264 T b2Simplex::Solve3()
001055f4 00000738 T b2Distance(b2DistanceOutput*, b2SimplexCache*, b2DistanceInput const*)
00105d2c 000000a4 T b2DynamicTree::b2DynamicTree()
00105d2c 000000a4 T b2DynamicTree::b2DynamicTree()
00105dd0 00000018 T b2DynamicTree::~b2DynamicTree()
00105dd0 00000018 T b2DynamicTree::~b2DynamicTree()
00105de8 0000012c T b2DynamicTree::AllocateNode()
00105f14 00000088 T b2DynamicTree::FreeNode(int)
00105f9c 00000658 T b2DynamicTree::Balance(int)
001065f4 000004b4 T b2DynamicTree::InsertLeaf(int)
00106aa8 00000084 T b2DynamicTree::CreateProxy(b2AABB const&, void*)
00106b2c 00000150 T b2DynamicTree::RemoveLeaf(int)
00106c7c 000000e4 T b2DynamicTree::DestroyProxy(int)
00106d60 000001ac T b2DynamicTree::MoveProxy(int, b2AABB const&, b2Vec2 const&)
00106f0c 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
00106f30 000004bc W b2SeparationFunction::FindMinSeparation(int*, int*, float) const
001073ec 00000304 W b2SeparationFunction::Evaluate(int, int, float) const
001076f0 00000af0 T b2TimeOfImpact(b2TOIOutput*, b2TOIInput const*)
001081e0 00000018 t _GLOBAL__sub_I_b2Vec2_zero
001081f8 0000001c T b2StackAllocator::b2StackAllocator()
001081f8 0000001c T b2StackAllocator::b2StackAllocator()
00108214 00000058 T b2StackAllocator::~b2StackAllocator()
00108214 00000058 T b2StackAllocator::~b2StackAllocator()
0010826c 000000b0 T b2StackAllocator::Allocate(int)
0010831c 000000b0 T b2StackAllocator::Free(void*)
001083cc 00000004 T b2Timer::b2Timer()
001083cc 00000004 T b2Timer::b2Timer()
001083d0 00000004 T b2Timer::Reset()
001083d4 0000000c T b2Timer::GetMilliseconds() const
001083e0 00000118 T b2Contact::InitializeRegisters()
001084f8 0000010c T b2Contact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00108604 00000120 T b2Contact::Destroy(b2Contact*, b2BlockAllocator*)
00108724 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
00108724 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
001087fc 00000280 T b2Contact::Update(b2ContactListener*)
00108a7c 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
00108a7c 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
00108a80 00000014 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
00108a94 00000034 T b2EdgeAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00108ac8 00000040 T b2EdgeAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
00108b08 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
00108b08 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
00108b9c 00000038 T b2EdgeAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00108bd4 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
00108bd4 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
00108bd8 00000014 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
00108bec 00000034 T b2EdgeAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00108c20 00000040 T b2EdgeAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
00108c60 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
00108c60 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
00108cf4 00000038 T b2EdgeAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00108d2c 000000a8 t b2Island::Report(b2ContactVelocityConstraint const*) [clone .part.0]
00108dd4 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
00108dd4 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
00108e84 0000004c T b2Island::~b2Island()
00108e84 0000004c T b2Island::~b2Island()
00108ed0 00000634 T b2Island::Solve(b2Profile*, b2TimeStep const&, b2Vec2 const&, bool)
00109504 00000360 T b2Island::SolveTOI(b2TimeStep const&, int, int)
00109864 00000140 T b2Joint::Destroy(b2Joint*, b2BlockAllocator*)
001099a4 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
001099a4 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
001099a8 00000014 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
001099bc 00000034 T b2PolygonAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
001099f0 00000040 T b2PolygonAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
00109a30 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
00109a30 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
00109ac4 00000038 T b2PolygonAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00109afc 00000004 W b2PolygonContact::~b2PolygonContact()
00109afc 00000004 W b2PolygonContact::~b2PolygonContact()
00109b00 00000014 W b2PolygonContact::~b2PolygonContact()
00109b14 00000034 T b2PolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00109b48 00000040 T b2PolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
00109b88 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
00109b88 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
00109c1c 00000038 T b2PolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00109c54 000000dc T b2CollideCircles(b2Manifold*, b2CircleShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
00109d30 0000039c T b2CollidePolygonAndCircle(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0010a0cc 00000310 T b2CollideEdgeAndCircle(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0010a3dc 00000840 T b2CollideEdgeAndPolygon(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0010ac1c 00000130 t b2FindMaxSeparation(int*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&) [clone .constprop.0]
0010ad4c 000004c8 T b2CollidePolygons(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0010b214 000003e8 T b2WorldManifold::Initialize(b2Manifold const*, b2Transform const&, float, b2Transform const&, float)
0010b5fc 00000108 T b2ClipSegmentToLine(b2ClipVertex*, b2ClipVertex const*, b2Vec2 const&, float, int)
0010b704 000000b8 T b2TestOverlap(b2Shape const*, int, b2Shape const*, int, b2Transform const&, b2Transform const&)
0010b7bc 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0010b7bc 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0010b7c0 00000014 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0010b7d4 0000008c T b2ChainAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0010b860 000000b8 T b2ChainAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010b918 00000040 T b2ChainAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0010b958 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0010b958 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0010b95c 00000014 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0010b970 0000008c T b2ChainAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0010b9fc 000000b8 T b2ChainAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010bab4 00000040 T b2ChainAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0010baf4 00000004 W b2CircleContact::~b2CircleContact()
0010baf4 00000004 W b2CircleContact::~b2CircleContact()
0010baf8 00000014 W b2CircleContact::~b2CircleContact()
0010bb0c 00000034 T b2CircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0010bb40 00000040 T b2CircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0010bb80 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0010bb80 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0010bc14 00000038 T b2CircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010bc4c 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0010bc4c 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0010befc 00000024 T b2ContactSolver::~b2ContactSolver()
0010befc 00000024 T b2ContactSolver::~b2ContactSolver()
0010bf20 00000444 T b2ContactSolver::InitializeVelocityConstraints()
0010c364 00000114 T b2ContactSolver::WarmStart()
0010c478 00000570 T b2ContactSolver::SolveVelocityConstraints()
0010c9e8 00000068 T b2ContactSolver::StoreImpulses()
0010ca50 00000304 W b2PositionSolverManifold::Initialize(b2ContactPositionConstraint*, b2Transform const&, b2Transform const&, int)
0010cd54 000002a4 T b2ContactSolver::SolvePositionConstraints()
0010cff8 000002d8 T b2ContactSolver::SolveTOIPositionConstraints(int, int)
0010d2d0 000000b8 T b2ChainShape::GetChildEdge(b2EdgeShape*, int) const
0010d388 00000008 T b2EdgeShape::GetChildCount() const
0010d390 00000008 T b2EdgeShape::TestPoint(b2Transform const&, b2Vec2 const&) const
0010d398 00000040 T b2EdgeShape::ComputeMass(b2MassData*, float) const
0010d3d8 00000004 W b2EdgeShape::~b2EdgeShape()
0010d3d8 00000004 W b2EdgeShape::~b2EdgeShape()
0010d3dc 000000b8 T b2EdgeShape::Clone(b2BlockAllocator*) const
0010d494 00000014 W b2EdgeShape::~b2EdgeShape()
0010d4a8 000001cc T b2EdgeShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
0010d674 000000b0 T b2EdgeShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
0010d724 00000044 t C2Di_FrameEndHook
0010d768 0000036c T C2D_Init
0010dad4 0000004c T C2D_Fini
0010db20 000000b8 T C2D_Prepare
0010dbd8 00000048 T C2D_Flush
0010dc20 00000104 T C2D_SceneSize
0010dd24 00000058 T C2D_CreateScreenTarget
0010dd7c 00000064 T C2D_TargetClear
0010dde0 00000058 T C2Di_AppendQuad
0010de38 00000040 T C2Di_AppendVtx
0010de78 00000550 T C2Di_Update
0010e3c8 00000158 T C2D_DrawRectangle
0010e520 00000018 t C2Di_GlyphComp
0010e538 00000140 t C2Di_CalcLineWidths
0010e678 000001dc T C2D_TextBufNew
0010e854 00000004 T C2D_TextBufDelete
0010e858 0000000c T C2D_TextBufClear
0010e864 000001c8 T C2D_TextFontParseLine
0010ea2c 000000a8 T C2D_TextFontParse
0010ead4 00000014 T C2D_TextParse
0010eae8 00000030 T C2D_TextOptimize
0010eb18 00000f6c T C2D_DrawText
0010fa84 00000044 T C2D_FontGlyphIndexFromCodePoint
0010fac8 00000078 T C2D_FontCalcGlyphPos
0010fb40 00000028 T AttrInfo_Init
0010fb68 00000094 T AttrInfo_AddLoader
0010fbfc 00000054 T C3D_SetAttrInfo
0010fc50 00000080 T C3Di_AttrInfoBind
0010fcd0 00000004 W C3Di_LightEnvUpdate
0010fcd4 00000004 W C3Di_LightEnvDirty
0010fcd8 000000b4 t C3Di_AptEventHook
0010fd8c 00000004 W C3Di_GasUpdate
0010fd90 000001d0 T C3D_Init
0010ff60 00000098 T C3D_SetViewport
0010fff8 000004e8 T C3Di_UpdateContext
001104e0 000000e0 T C3Di_SplitFrame
001105c0 00000044 T C3D_Fini
00110604 00000194 T C3D_BindProgram
00110798 00000024 T BufInfo_Init
001107bc 00000080 T BufInfo_Add
0011083c 0000003c T C3D_SetBufInfo
00110878 00000048 T C3Di_BufInfoBind
001108c0 0000021c T C3D_DrawElements
00110adc 00000040 T C3D_DepthMap
00110b1c 0000001c T C3D_CullFace
00110b38 00000040 T C3D_StencilTest
00110b78 00000024 T C3D_StencilOp
00110b9c 0000001c T C3D_BlendingColor
00110bb8 00000024 T C3D_EarlyDepthTest
00110bdc 0000002c T C3D_DepthTest
00110c08 0000002c T C3D_AlphaTest
00110c34 00000050 T C3D_AlphaBlend
00110c84 00000030 T C3D_FragOpMode
00110cb4 00000044 T C3D_FragOpShadow
00110cf8 000001ac T C3Di_EffectBind
00110ea4 0000001c T C3D_CalcColorBufSize
00110ec0 0000001c T C3D_CalcDepthBufSize
00110edc 00000044 T C3D_SetFrameBuf
00110f20 0000016c T C3Di_FrameBufBind
0011108c 000000c8 T C3D_FrameBufClear
00111154 00000044 T C3D_FrameBufTransfer
00111198 000000a8 T C3D_ImmSendAttrib
00111240 00000070 T C3D_ProcTexInit
001112b0 00000054 T C3D_ProcTexBind
00111304 0000005c T C3D_ProcTexLutBind
00111360 000000a4 T ProcTexLut_FromArray
00111404 00000178 T C3Di_ProcTexUpdate
0011157c 00000068 T C3Di_ProcTexDirty
001115e4 0000004c t onVBlank0
00111630 0000004c t onVBlank1
0011167c 00000080 t C3Di_RenderTargetDestroy
001116fc 000000f4 t onQueueFinish
001117f0 00000038 T C3Di_RenderQueueEnableVBlank
00111828 00000030 T C3Di_RenderQueueDisableVBlank
00111858 00000060 T C3Di_RenderQueueInit
001118b8 000000b4 T C3Di_RenderQueueExit
0011196c 00000034 T C3Di_RenderQueueWaitDone
001119a0 000000e8 T C3D_FrameBegin
00111a88 00000048 T C3D_FrameDrawOn
00111ad0 00000058 T C3D_FrameSplit
00111b28 000001d0 T C3D_FrameEnd
00111cf8 0000001c T C3D_FrameEndHook
00111d14 00000170 T C3D_RenderTargetCreate
00111e84 000000a8 T C3D_RenderTargetSetOutput
00111f2c 00000034 T C3D_GetTexEnv
00111f60 00000024 T C3Di_TexEnvBind
00111f84 00000044 T C3D_TexBind
00111fc8 0000014c T C3Di_SetTex
00112114 00000290 T C3D_UpdateUniforms
001123a4 000000c0 T C3Di_DirtyUniforms
00112464 000000d8 T C3Di_LoadShaderUniforms
0011253c 00000028 T C3Di_ClearShaderUniforms
00112564 000000cc T Mtx_Ortho
00112630 000000cc T Mtx_OrthoTilt
001126fc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00112720 00000004 t addrMapNodeDestructor(rbtree_node*)
00112724 00000120 T linearMemAlign
00112844 00000008 T linearAlloc
0011284c 0000005c T linearFree
001128a8 00000084 T MemPool::CoalesceRight(MemBlock*)
0011292c 00000150 T MemPool::Allocate(MemChunk&, unsigned long, int)
00112a7c 000000fc T MemPool::Deallocate(MemChunk const&)
00112b78 00000030 T MemPool::GetFreeSpace()
00112ba8 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00112bcc 00000004 t addrMapNodeDestructor(rbtree_node*)
00112bd0 00000244 T vramMemAlignAt
00112e14 0000000c T vramAlloc
00112e20 0000000c T vramAllocAt
00112e2c 00000090 T vramFree
00112ebc 00000094 T fontEnsureMapped
00112f50 00000100 T fontGlyphIndexFromCodePoint
00113050 000001ec T fontCalcGlyphPos
0011323c 000000d0 t gfxPresentFramebuffer
0011330c 0000001c T gfxIsWide
00113328 000000ec T gfxSetScreenFormat
00113414 000000d8 T gfxInit
001134ec 00000010 T gfxInitDefault
001134fc 000000b4 T gfxExit
001135b0 000000a0 T gfxGetFramebuffer
00113650 00000030 T gfxScreenSwapBuffers
00113680 00000074 T osConvertVirtToPhys
001136f4 00000034 T __ctru_speedup_config
00113728 0000013c T GPUCMD_Add
00113864 000000b0 T GPUCMD_Split
00113914 00000034 T f32tof16
00113948 00000034 T f32tof24
0011397c 00000038 T f32tof31
001139b4 00000010 T GX_BindQueue
001139c4 00000078 T GX_ProcessCommandList
00113a3c 00000074 T GX_MemoryFill
00113ab0 00000070 T GX_DisplayTransfer
00113b20 00000068 t gxCmdQueueDoCommands.part.0
00113b88 000000c8 T gxCmdQueueInterrupt
00113c50 0000004c T gxCmdQueueClear
00113c9c 000000f8 T gxCmdQueueAdd
00113d94 00000080 T gxCmdQueueRun
00113e14 00000060 T gxCmdQueueStop
00113e74 0000008c T gxCmdQueueWait
00113f00 000001d0 T shaderInstanceInit
001140d0 00000018 T shaderInstanceGetUniformLocation
001140e8 0000001c T shaderProgramInit
00114104 00000064 T shaderProgramFree
00114168 00000080 T shaderProgramSetVsh
001141e8 000008d0 T shaderProgramConfigure
00114ab8 000001dc t DVLE_GenerateOutmap.part.0
00114c94 000001b0 T DVLB_ParseFile
00114e44 00000038 T DVLB_Free
00114e7c 00000074 T DVLE_GetUniformRegister
00114ef0 000001b0 t aptConvertScreenForCapture
001150a0 00000008 W aptDspSleep
001150a8 00000004 W aptDspWakeup
001150ac 00000004 W aptDspCancel
001150b0 00000158 T aptSendCommand
00115208 00000044 t aptExitProcess
0011524c 00000380 T aptExit
001155cc 000000d8 T aptHandleSleep
001156a4 00000030 T aptHook
001156d4 00000030 T aptUnhook
00115704 00000084 T APT_SleepIfShellClosed
00115788 00000078 T aptSetSleepAllowed
00115800 00000084 T APT_UnlockTransition
00115888 00000478 t aptEventHandler
00115d00 000000b0 T APT_ReceiveParameter
00115db0 000000ac t aptReceiveParameter.constprop.0
00115e60 00000294 t aptScreenTransfer
001160f4 000002c8 t aptWaitForWakeUp.isra.0
001163bc 000000f4 T aptJumpToHomeMenu
001164b0 00000048 T aptMainLoop
001164f8 0000022c T aptInit
00116724 0000007c T APT_CheckNew3DS
001167a0 00000048 T APT_GetSharedFont
001167e8 000000a4 T cfguInit
0011688c 0000003c T cfguExit
001168c8 000000d0 T fsInit
00116998 0000003c T fsExit
001169d4 00000060 T fsExemptFromSession
00116a34 00000050 T fsUnexemptFromSession
00116a84 000000cc T FSUSER_OpenFile
00116b50 000000bc T FSUSER_DeleteFile
00116c0c 000000f8 T FSUSER_RenameFile
00116d04 000000bc T FSUSER_DeleteDirectory
00116dc0 000000d4 T FSUSER_CreateFile
00116e94 000000c4 T FSUSER_CreateDirectory
00116f58 000000f8 T FSUSER_RenameDirectory
00117050 000000b4 T FSUSER_OpenDirectory
00117104 00000094 T FSUSER_OpenArchive
00117198 0000008c T FSUSER_CloseArchive
00117224 00000074 T FSUSER_GetSdmcArchiveResource
00117298 00000064 T FSUSER_IsSdmcWritable
001172fc 00000058 T FSFILE_Read
00117354 00000060 T FSFILE_Write
001173b4 00000038 T FSFILE_GetSize
001173ec 00000028 T FSFILE_SetSize
00117414 0000003c T FSFILE_Close
00117450 00000024 T FSFILE_Flush
00117474 00000050 T FSDIR_Read
001174c4 0000003c T FSDIR_Close
00117500 00000c70 t gspHardwareInit
00118170 00000248 T gspInit
001183b8 000000e4 T gspExit
0011849c 00000010 T gspHasGpuRight
001184ac 000000a0 T gspPresentBuffer
0011854c 00000030 T gspSetEventCallback
0011857c 00000044 T gspWaitForEvent
001185c0 0000004c T gspWaitForAnyEvent
0011860c 00000160 t gspEventThreadMain
0011876c 00000130 T gspSubmitGxCommand
0011889c 00000050 T GSPGPU_FlushDataCache
001188ec 00000034 T GSPGPU_SetLcdForceBlack
00118920 00000068 T GSPGPU_AcquireRight
00118988 00000048 T GSPGPU_ReleaseRight
001189d0 0000007c T GSPGPU_ImportDisplayCaptureInfo
00118a4c 0000002c T GSPGPU_SaveVramSysArea
00118a78 0000002c T GSPGPU_RestoreVramSysArea
00118aa4 00000024 W hidShouldUseIrrst
00118ac8 0000018c T hidInit
00118c54 000000e8 T hidExit
00118d3c 000002a4 T hidScanInput
00118fe0 00000010 T hidKeysHeld
00118ff0 00000010 T hidKeysDown
00119000 00000018 T hidTouchRead
00119018 00000160 T irrstInit
00119178 000000cc T irrstExit
00119244 000000b4 T irrstScanInput
001192f8 00000024 T irrstKeysHeld
0011931c 00000074 T ptmSysmInit
00119390 0000003c T ptmSysmExit
001193cc 00000034 T PTMSYSM_ConfigureNew3DSCPU
00119400 00000074 T rbtree_find
00119474 00000010 T rbtree_init
00119484 0000019c t do_insert
00119620 00000008 T rbtree_insert
00119628 00000310 T rbtree_remove
00119938 00000090 T rbtree_rotate
001199c8 0000013c T decode_utf8
00119b04 000000e8 T utf16_to_utf8
00119bec 000000c0 T utf8_to_utf16
00119cb0 000001e0 W __system_allocateHeaps
00119e90 00000038 W __libctru_init
00119ec8 00000160 W __system_initArgv
0011a028 00000030 T __syscall_getreent
0011a058 00000004 T __syscall_lock_acquire
0011a05c 00000004 T __syscall_lock_release
0011a060 00000004 T __syscall_lock_acquire_recursive
0011a064 00000004 T __syscall_lock_release_recursive
0011a068 00000004 T __syscall_exit
0011a06c 00000050 T initThreadVars
0011a0bc 00000080 T __system_initSyscalls
0011a13c T svcControlMemory
0011a15c T svcQueryMemory
0011a18c T svcExitProcess
0011a194 T svcCreateThread
0011a1b4 T svcExitThread
0011a1bc T svcSleepThread
0011a1c4 T svcReleaseMutex
0011a1cc T svcCreateEvent
0011a1e0 T svcSignalEvent
0011a1e8 T svcClearEvent
0011a1f0 T svcMapMemoryBlock
0011a1f8 T svcUnmapMemoryBlock
0011a200 T svcCreateAddressArbiter
0011a214 T svcArbitrateAddressNoTimeout
0011a21c T svcCloseHandle
0011a224 T svcWaitSynchronization
0011a22c T svcWaitSynchronizationN
0011a254 T svcDuplicateHandle
0011a268 T svcGetSystemTick
0011a270 T svcConnectToPort
0011a284 T svcSendSyncRequest
0011a28c T svcGetResourceLimit
0011a2a0 T svcGetResourceLimitLimitValues
0011a2a8 T svcGetResourceLimitCurrentValues
0011a2b0 T svcBreak
0011a2b8 T __aeabi_read_tp
0011a2c4 W initSystem
0011a314 W __ctru_exit
0011a328 00000084 W envGetHandle
0011a3ac 00000050 W envDestroyHandles
0011a3fc 0000012c T srvInit
0011a528 00000058 T srvExit
0011a580 00000060 T srvEnableNotification
0011a5e0 000000a0 T srvGetServiceHandleDirect
0011a680 00000038 T srvGetServiceHandle
0011a6b8 00000034 T srvSubscribe
0011a6ec 00000060 T srvReceiveNotification
0011a74c 00000038 T srvPublishToSubscriber
0011a784 0000000c T __sync_init
0011a790 00000018 T __sync_fini
0011a7a8 0000002c T syncArbitrateAddress
0011a7d4 000000b0 T LightLock_Lock
0011a884 00000040 T LightLock_Unlock
0011a8c4 00000030 T RecursiveLock_Lock
0011a8f4 00000054 T RecursiveLock_Unlock
0011a948 00000040 T LightEvent_Init
0011a988 000000a4 T LightEvent_Clear
0011aa2c 000000c8 T LightEvent_Signal
0011aaf4 00000050 T LightEvent_TryWait
0011ab44 000000a0 T LightEvent_Wait
0011abe4 000001d4 T threadCreate
0011adb8 0000002c T threadFree
0011ade4 00000024 T threadJoin
0011ae08 00000030 T threadGetCurrent
0011ae38 00000040 T threadExit
0011ae78 00000020 t _thread_begin
0011ae98 00000090 t mappableFindAddressWithin
0011af28 00000028 T mappableInit
0011af50 00000080 T mappableAlloc
0011afd0 00000004 T mappableFree
0011afd4 0000000c T srvPmGetSessionHandle
0011afe0 0000005c T rbtree_node_next
0011b03c 00000064 T decode_utf16
0011b0a0 00000054 T encode_utf16
0011b0f4 000000e0 T encode_utf8
0011b1d4 00000030 W __appExit
0011b204 00000030 W __appInit
0011b234 00000090 W __libctru_exit
0011b2c4 00000014 t archive_link
0011b2d8 00000014 t archive_dirreset
0011b2ec 00000014 t archive_chmod
0011b300 00000024 t error_cmp
0011b324 00000050 t archive_translate_error
0011b374 000000c4 t archive_seek
0011b438 00000078 t _archiveInit.part.0
0011b4b0 000000c4 t archiveFindDevice.part.0
0011b574 00000290 t archive_utf16path
0011b804 0000009c t _archiveUnmountDeviceStruct.part.0
0011b8a0 00000014 t archive_statvfs
0011b8b4 00000014 t archive_fchmod
0011b8c8 00000168 t _archiveMountDevice
0011ba30 000000e8 t archive_diropen
0011bb18 000000a4 t archive_fstat
0011bbbc 0000006c t archive_fsync
0011bc28 0000006c t archive_close
0011bc94 00000070 t archive_dirclose
0011bd04 000000e4 t sdmc_statvfs
0011bde8 000000ec t archive_chdir
0011bed4 0000007c t archive_ftruncate
0011bf50 000000ac t archive_read
0011bffc 000000a4 t archive_unlink
0011c0a0 000000bc t archive_rmdir
0011c15c 000000dc t archive_mkdir
0011c238 00000194 t archive_stat
0011c3cc 0000015c t archive_dirnext
0011c528 00000124 t archive_write
0011c650 00000210 t archive_open
0011c860 00000268 t archive_rename
0011cac8 0000019c T archiveMountSdmc
0011cc64 00000054 T archiveUnmountAll
0011ccb8 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0011cd14 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0011cd28 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0011cd28 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0011cd48 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0011cd74 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0011cdd8 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0011ce54 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0011cf28 00000004 T operator delete(void*)
0011cf2c 00000004 T operator delete(void*, unsigned int)
0011cf30 T __cxa_end_cleanup
0011cf40 00000134 T __cxa_type_match
0011d074 000000b4 T __cxa_begin_cleanup
0011d128 000000b4 T __gnu_end_cleanup
0011d1dc 00000004 T std::exception::~exception()
0011d1dc 00000004 T std::exception::~exception()
0011d1e0 00000004 T std::bad_exception::~bad_exception()
0011d1e0 00000004 T std::bad_exception::~bad_exception()
0011d1e4 0000000c T transaction clone for std::bad_exception::what() const
0011d1e4 0000000c T std::bad_exception::what() const
0011d1f0 00000018 T std::bad_exception::~bad_exception()
0011d208 0000003c t eh_globals_dtor(void*)
0011d244 00000038 T __cxa_get_globals_fast
0011d27c 00000074 T __cxa_get_globals
0011d2f0 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0011d330 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0011d364 00000148 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0011d4ac 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0011d504 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0011d5dc 000006dc T __gxx_personality_v0
0011dcb8 00000014 T __cxxabiv1::__terminate(void (*)())
0011dccc 00000018 T std::terminate()
0011dce4 0000000c T __cxxabiv1::__unexpected(void (*)())
0011dcf0 00000018 T std::unexpected()
0011dd08 00000014 T std::get_terminate()
0011dd1c 00000014 T std::get_unexpected()
0011dd30 0000005c T operator new(unsigned int)
0011dd8c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0011dd8c 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0011ddac 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0011ddd8 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0011df10 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0011df98 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0011dfdc 00000004 T std::type_info::~type_info()
0011dfdc 00000004 T std::type_info::~type_info()
0011dfe0 00000008 T std::type_info::__is_pointer_p() const
0011dfe0 00000008 T std::type_info::__is_function_p() const
0011dfe8 0000000c T std::bad_alloc::what() const
0011dff4 00000020 T std::bad_alloc::~bad_alloc()
0011dff4 00000020 T std::bad_alloc::~bad_alloc()
0011e014 0000002c T std::bad_alloc::~bad_alloc()
0011e040 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0011e04c 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0011e058 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011e058 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011e078 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011e0a4 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0011e0a4 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0011e0c4 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0011e0f0 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0011e11c 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0011e148 00000128 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0011e270 000000d8 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0011e348 00000044 T __cxa_allocate_exception
0011e38c 0000002c T __cxa_free_exception
0011e3b8 000001b0 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0011e568 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0011e5d8 0000002c T __cxa_call_terminate
0011e604 00000148 T __cxa_call_unexpected
0011e74c 000000cc T __cxa_begin_catch
0011e818 000000e0 T __cxa_end_catch
0011e8f8 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0011e958 00000054 T __cxa_init_primary_exception
0011e9ac 00000054 T __cxa_throw
0011ea00 000000b0 T __cxa_rethrow
0011eab0 00000014 T std::get_new_handler()
0011eac8 0000025c T sinf
0011ed24 00000050 T sqrtf
0011ed74 00000024 t with_errnof
0011ed98 0000001c T __math_invalidf
0011edb4 000000c0 T ceilf
0011ee78 0000021c T cosf
0011f094 000000c0 T floorf
0011f154 00000008 T __ieee754_sqrtf
0011f15c 00000120 T __udivmoddi4
0011f27c 00000018 t selfrel_offset31
0011f294 00000090 t search_EIT_table
0011f324 00000040 t __gnu_unwind_get_pr_addr
0011f364 0000010c t get_eit_entry
0011f470 00000088 t restore_non_core_regs
0011f4f8 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0011f50c 00000004 t _Unwind_DebugHook
0011f510 00000064 t unwind_phase2
0011f574 00000140 t unwind_phase2_forced
0011f6b4 000000a4 T __gnu_Unwind_RaiseException
0011f758 00000028 T __gnu_Unwind_ForcedUnwind
0011f780 00000074 T __gnu_Unwind_Resume
0011f7f4 0000002c T __gnu_Unwind_Resume_or_Rethrow
0011f820 00000004 T _Unwind_Complete
0011f824 00000018 T _Unwind_DeleteException
0011f83c 00000064 T _Unwind_VRS_Get
0011f8a0 0000002c t _Unwind_GetGR
0011f8cc 00000064 T _Unwind_VRS_Set
0011f930 0000002c t _Unwind_SetGR
0011f95c 000000c0 T __gnu_Unwind_Backtrace
0011fa1c 00000410 t __gnu_unwind_pr_common
0011fe2c 00000008 T __aeabi_unwind_cpp_pr0
0011fe34 00000008 W __aeabi_unwind_cpp_pr1
0011fe3c 00000008 W __aeabi_unwind_cpp_pr2
0011fe44 00000458 T _Unwind_VRS_Pop
0012029c 00000064 t next_unwind_byte
00120300 0000002c t _Unwind_GetGR.constprop.0
0012032c 00000004 t unwind_UCB_from_context
00120330 00000460 T __gnu_unwind_execute
00120790 00000048 T __gnu_unwind_frame
001207d8 00000010 T _Unwind_GetRegionStart
001207e8 0000001c T _Unwind_GetLanguageSpecificData
00120804 00000008 T _Unwind_GetDataRelBase
0012080c 00000008 T _Unwind_GetTextRelBase
00120814 000000d8 T strncmp
001208ec 00000130 T strchr
00120a1c 00000024 T getenv
00120a40 0000005c T strlen
00120a9c 0000005c T __assert_func
00120af8 0000003c T fiprintf
00120b34 000000d4 T memcmp
00120c08 000001e4 t _strtoul_l.isra.0
00120dec 00000034 T strtoul
00120e20 000000e4 T strncat
00120f04 00000078 T bsearch
00120f7c 00000020 T calloc
00120f9c 0000096c T qsort
00121908 00000014 T abort
0012191c 00000148 T _fclose_r
00121a64 000000c0 T _calloc_r
00121b24 00000144 T __smakebuf_r
00121c68 00000020 T memalign
00121c88 0000001c t stdio_exit_handler
00121ca4 0000005c t cleanup_stdio
00121d00 00000154 t global_stdio_init.part.0
00121e54 0000005c T __sinit
00121eb0 0000000c T __sfp_lock_acquire
00121ebc 0000000c T __sfp_lock_release
00121ec8 000007e8 T _malloc_r
001226b0 000001b4 t quorem
00122868 00001370 T _dtoa_r
00123bd8 000000a0 T _wcrtomb_r
00123c78 000000f8 T _malloc_trim_r
00123d70 00000300 T _free_r
00124070 0000004c T strnlen
001240bc 0000000c T __errno
001240c8 00000034 T malloc
001240fc 00000018 T free
00124114 00000130 T memcpy
00124244 000000c8 T _findenv_r
0012430c 000000e8 T memset
001243f4 000004a4 T _realloc_r
00124898 00000070 T _fwalk_sglue
00124908 0000000c T __malloc_lock
00124914 0000000c T __malloc_unlock
00124920 00000004 W __call_exitprocs
00124924 00000030 T exit
00124954 000000d4 T snprintf
00124a28 000000c4 T strncpy
00124aec 00000028 T _wcsrtombs_r
00124b14 00000084 T __libc_init_array
00124b98 00000194 T __swsetup_r
00124d2c 00000228 T __sflush_r
00124f54 00000094 T _fflush_r
00124fe8 00000088 T frexp
00125070 00000160 T memmove
001251d0 00000090 T _raise_r
00125260 00000018 T raise
00125278 0000000c T __env_lock
00125284 0000000c T __env_unlock
00125290 00000088 T _Balloc
00125318 0000001c T _Bfree
00125334 000000f4 T __multadd
00125428 00000080 T __hi0bits
001254a8 000000f4 T __lo0bits
0012559c 000000a4 T __i2b
00125640 00000208 T __multiply
00125848 00000130 T __pow5mult
00125978 00000138 T __lshift
00125ab0 00000058 T __mcmp
00125b08 000001f0 T __mdiff
00125cf8 00000120 T __d2b
00125e18 00000024 T __locale_mb_cur_max
00125e3c 000000a4 T __ssprint_r
00125ee0 000005e4 t get_arg
001264c4 00002264 T _vfiprintf_r
00128728 000000b8 t __sbprintf
001287e0 00000150 T _memalign_r
00128930 000000e0 T memchr
00128a10 00000160 T _wcsnrtombs_l
00128b70 00000064 T _wcsnrtombs_r
00128bd4 00000324 T __utf8_mbtowc
00128ef8 0000003c T __libc_fini_array
00128f34 00000030 T __sprint_r
00128f64 00000044 T __sread
00128fa8 00000068 T __swrite
00129010 00000040 T __sseek
00129050 00000008 T __sclose
00129058 00000024 T _localeconv_r
0012907c 000005e4 t get_arg
00129660 0000335c T _svfprintf_r
0012c9bc 00000128 T __ssputs_r
0012cae4 000000f0 T __utf8_wctomb
0012cbd4 00000480 T __sfvwrite_r
0012d054 00000020 T _exit
0012d074 0000013c T chdir
0012d1b0 000001cc T _concatenate_path
0012d37c 00000088 T _fstat_r
0012d404 00000014 T _getpid_r
0012d418 0000002c T __getreent
0012d444 0000003c T __get_handle
0012d480 000000f4 T _close_r
0012d574 00000008 t null_write
0012d57c 00000018 T setDefaultDevice
0012d594 000000c8 T FindDevice
0012d65c 00000028 T RemoveDevice
0012d684 00000098 T AddDevice
0012d71c 00000020 T GetDeviceOpTab
0012d73c 00000008 T _isatty_r
0012d744 00000014 T _kill_r
0012d758 0000008c T _lseek_r
0012d7e4 00000088 T _read_r
0012d86c 00000078 W _sbrk_r
0012d8e4 0000001c T __libc_lock_acquire
0012d900 0000001c T __libc_lock_release
0012d91c 0000001c T __libc_lock_acquire_recursive
0012d938 0000001c T __libc_lock_release_recursive
0012d954 00000088 T _write_r
0012d9dc 00000048 T strrchr
0012da24 T _fini
0012f3fc r .LC2
001307c8 00000009 V typeinfo name for b2Shape
001307d4 00000008 V typeinfo for b2Shape
001307dc 0000000c R typeinfo for b2PolygonShape
001307e8 00000011 R typeinfo name for b2PolygonShape
001307fc 00000028 R vtable for b2PolygonShape
00130824 00000038 r b2_blockSizes
0013085c 00000014 V typeinfo name for b2ContactListener
00130870 00000008 V typeinfo for b2ContactListener
00130878 00000020 V vtable for b2ContactListener
00130898 00000008 R typeinfo for b2ContactFilter
001308a0 00000012 R typeinfo name for b2ContactFilter
001308b4 00000014 R vtable for b2ContactFilter
001308c8 0000000b V typeinfo name for b2Contact
001308d4 00000008 V typeinfo for b2Contact
001308dc 00000014 V vtable for b2Contact
001308f0 0000000c R typeinfo for b2EdgeAndCircleContact
001308fc 00000019 R typeinfo name for b2EdgeAndCircleContact
00130918 00000014 R vtable for b2EdgeAndCircleContact
0013092c 0000000c R typeinfo for b2EdgeAndPolygonContact
00130938 0000001a R typeinfo name for b2EdgeAndPolygonContact
00130954 00000014 R vtable for b2EdgeAndPolygonContact
00130968 0000000c R typeinfo for b2PolygonAndCircleContact
00130974 0000001c R typeinfo name for b2PolygonAndCircleContact
00130990 00000014 R vtable for b2PolygonAndCircleContact
001309a4 0000000c R typeinfo for b2PolygonContact
001309b0 00000013 R typeinfo name for b2PolygonContact
001309c4 00000014 R vtable for b2PolygonContact
001309d8 0000000c R typeinfo for b2ChainAndCircleContact
001309e4 0000001a R typeinfo name for b2ChainAndCircleContact
00130a00 00000014 R vtable for b2ChainAndCircleContact
00130a14 0000000c R typeinfo for b2ChainAndPolygonContact
00130a20 0000001b R typeinfo name for b2ChainAndPolygonContact
00130a3c 00000014 R vtable for b2ChainAndPolygonContact
00130a50 0000000c R typeinfo for b2CircleContact
00130a5c 00000012 R typeinfo name for b2CircleContact
00130a70 00000014 R vtable for b2CircleContact
00130a84 0000000c R typeinfo for b2EdgeShape
00130a90 0000000e R typeinfo name for b2EdgeShape
00130aa0 00000028 R vtable for b2EdgeShape
00130ac8 R render2d_shbin
00130c54 R render2d_shbin_end
00130c54 R render2d_shbin_size
00130c58 00000004 r depthFmtSizes
00130c5c 00000005 r colorFmtSizes
00130c64 00000010 r CSWTCH.11
00130c9c 00000008 r morton_y.2
00130ca4 00000008 r morton_x.3
00130cac 00000008 r s_sleepWakeEvents.4
00130cb4 00000030 r error_table
00130ce4 00000080 r archive_devoptab
00130d64 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00130d88 0000000c R typeinfo for __cxxabiv1::__class_type_info
00130d94 0000002c R vtable for __cxxabiv1::__class_type_info
00130dc0 0000000d R typeinfo name for std::exception
00130dd0 00000008 R typeinfo for std::exception
00130dd8 00000012 R typeinfo name for std::bad_exception
00130dec 0000000c R typeinfo for std::bad_exception
00130df8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00130e18 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00130e20 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00130e44 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00130e4c 00000014 R vtable for std::bad_exception
00130e74 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00130e9c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00130ea8 0000002c R vtable for __cxxabiv1::__si_class_type_info
00130ed4 0000000d R typeinfo name for std::type_info
00130ee4 00000008 R typeinfo for std::type_info
00130eec 0000000d R typeinfo name for std::bad_alloc
00130efc 0000000c R typeinfo for std::bad_alloc
00130f08 00000014 R vtable for std::bad_alloc
00130f1c 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00130f44 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
00130f50 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
00130f7c 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
00130f88 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
00130f9c 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
00130fb0 00000060 R __inv_pio4
00131010 000000e0 R __sincosf_table
00131110 00000101 R _ctype_
00131214 0000006c R __action_table
00131280 0000006c R __state_table
001312ec 00000100 R __chclass
001313ec 0000000c r p05.0
001313f8 00000028 R __mprec_bigtens
00131420 000000c8 R __mprec_tens
00131610 00000010 r zeroes.0
00131620 00000010 r blanks.1
0013171c 00000010 r zeroes.0
0013172c 00000010 r blanks.1
0013173c 00000080 R dotab_stdnull
001317bc R __tdata_align
001317c0 r __EH_FRAME_BEGIN__
00131a60 R __exidx_start
00131fe0 R __exidx_end
00132000 00000004 D b2_defaultFilter
00132004 00000004 D b2_defaultListener
00132008 00000001 D g_blockSolve
0013200c 00000008 d framerateCounter
00132014 00000004 d framerate
00132018 00000004 d queueLock
0013201c 00000004 d aptChainloadDeliverArgSize
00132020 00000004 d kCount
00132024 00000004 d kInterval
00132028 00000004 d kDelay
0013202c W __stacksize__
00132030 00000004 D __cxxabiv1::__unexpected_handler
00132034 00000004 D __cxxabiv1::__terminate_handler
00132038 00000004 D _impure_ptr
00132040 00000120 D _impure_data
00132160 0000000c D __sglue
0013216c 00000004 D __malloc_sbrk_base
00132170 00000004 D __malloc_trim_threshold
00132178 00000408 D __malloc_av_
00132580 0000016c D __global_locale
001326ec 00000004 D environ
001326f0 00000400 d _current_working_directory
00132af0 00001000 d handles
00133af0 0000000c d __stderr_handle
00133afc 0000000c d __stdout_handle
00133b08 0000000c d __stdin_handle
00133b14 0000008c D devoptab_list
00133ba0 00000004 d defaultDevice
00133bac d _GLOBAL_OFFSET_TABLE_
00133bb8 d __frame_dummy_init_array_entry
00133bb8 D __init_array_start
00133bb8 B __preinit_array_end
00133bb8 B __preinit_array_start
00133bb8 D __tdata_lma
00133bb8 D __tdata_lma_end
00133bcc d __do_global_dtors_aux_fini_array_entry
00133bcc D __fini_array_start
00133bcc D __init_array_end
00133bd4 D __bss_start__
00133bd4 b completed.1
00133bd4 D __fini_array_end
00133bd8 b object.0
00133bf0 00000281 b b2_sizeMap
00133e74 00000004 B b2_gjkCalls
00133e78 00000004 B b2_gjkIters
00133e7c 00000004 B b2_gjkMaxIters
00133e80 00000004 B b2_toiCalls
00133e84 00000004 B b2_toiIters
00133e88 00000004 B b2_toiMaxIters
00133e8c 00000004 B b2_toiMaxRootIters
00133e90 00000004 B b2_toiMaxTime
00133e94 00000004 B b2_toiRootIters
00133e98 00000004 B b2_toiTime
00133e9c 00000008 B b2Vec2_zero
00133ea4 000000c0 B b2Contact::s_registers
00133f64 00000001 B b2Contact::s_initialized
00133f68 000005a8 B __C2Di_Context
00134510 00000040 b s_projBot
00134550 00000040 b s_projTop
00134590 00000004 b uLoc_mdlvMtx
00134594 00000004 b uLoc_projMtx
00134598 00000004 b s_glyphSheets
0013459c 00000004 b s_textScale
001345a0 0000000c b hookCookie
001345b0 000002d0 B __C3D_Context
00134880 00000004 b frameEndCbData
00134884 00000004 b frameEndCb
00134888 00000008 b frameCounter
00134890 00000001 b isTopStereo
00134891 00000001 b needSwapBot
00134892 00000001 b needSwapTop
00134893 00000001 b measureGpuTime
00134894 00000001 b inSafeTransfer
00134895 00000001 b inFrame
00134898 00000010 b cpuTime
001348a8 00000010 b gpuTime
001348b8 0000000c b linkedTarget
001348c4 00000004 b lastTarget
001348c8 00000004 b firstTarget
001348cc 00000008 b C3Di_IVUnifEverDirty
001348d4 000000c0 b C3Di_FVUnifEverDirty
00134994 00000018 b C3Di_ShaderFVecData
001349ac 00000002 B C3D_BoolUnifsDirty
001349b0 00000008 B C3D_IVUnifDirty
001349b8 000000c0 B C3D_FVUnifDirty
00134a78 00000004 B C3D_BoolUnifs
00134a7c 00000020 B C3D_IVUnif
00134a9c 00000c00 B C3D_FVUnif
001356a0 00000008 b sLinearPool
001356a8 0000000c b sAddrMap
001356b8 00000008 b sVramPoolB
001356c0 00000008 b sVramPoolA
001356c8 0000000c b sAddrMap
001356d4 00000004 b sharedFontAddr
001356d8 00000004 B g_sharedFont
001356dc 00000004 b screenAlloc
001356e0 00000004 b screenFree
001356e4 00000002 b gfxIsDoubleBuf
001356e8 00000002 b gfxCurBuf
001356ea 00000001 b gfxIsVram
001356eb 00000001 b gfxTopMode
001356ec 00000002 b gfxFramebufferFormats
001356f0 00000004 b gfxBottomFramebufferMaxSize
001356f4 00000004 b gfxTopFramebufferMaxSize
001356f8 00000008 b gfxBottomFramebuffers
00135700 00000008 b gfxTopFramebuffers
00135708 00000001 V __ctru_speedup
0013570c 00000004 B gpuCmdBufOffset
00135710 00000004 B gpuCmdBufSize
00135714 00000004 B gpuCmdBuf
00135718 00000004 b boundQueue
0013571c 00000001 b shouldStop
0013571d 00000001 b isRunning
0013571e 00000001 b isActive
00135720 00000004 b curQueue
00135724 00000001 b flagValue.0
00135725 00000001 b flagInit.1
00135728 00000004 b serviceName.6
0013572c 00000001 b aptChainloadFlags
0013572d 00000001 b aptChainloadMediatype
00135730 00000020 b aptChainloadHmac
00135750 00000300 b aptChainloadDeliverArg
00135a50 00000008 b aptChainloadTid
00135a58 00001000 b aptParameters
00136a58 00000004 b aptFlags
00136a5c 00000001 b aptHomeButtonState
00136a60 00000004 b aptMessageFuncData
00136a64 00000004 b aptMessageFunc
00136a68 0000000c b aptFirstHook
00136a74 00000001 b aptEventHandlerThreadQuit
00136a78 00000004 b aptEventHandlerThread
00136a7c 00000008 b aptSleepEvent
00136a84 00000008 b aptReceiveEvent
00136a8c 00000008 b aptEvents
00136a94 00000004 b aptLockHandle
00136a98 00000004 b aptRefCount
00136a9c 00000004 b cfguRefCount
00136aa0 00000004 b cfguHandle
00136aa8 00000080 b fsExemptArchives
00136b28 00000004 b fsuRefCount
00136b2c 00000004 b fsuHandle
00136b30 00000007 b gspEventCbOneShot
00136b38 0000001c b gspEventCbData
00136b54 0000001c b gspEventCb
00136b70 00000038 b gspEvents
00136ba8 00000004 b gspLastEvent
00136bac 00000001 b gspRunEvents
00136bb0 00000004 b gspEventThread
00136bb4 00000004 b gspEvent
00136bb8 00000001 b gspGpuRight
00136bb9 00000001 b gspThreadId
00136bbc 00000004 b gspSharedMem
00136bc0 00000004 b gspSharedMemHandle
00136bc4 00000004 b gspRefCount
00136bc8 00000004 b gspGpuHandle
00136bcc 00000001 b usingIrrst
00136bd0 00000004 b hidRefCount
00136bd4 00000006 b gRate
00136bdc 00000006 b aVec
00136be4 00000004 b cPos
00136be8 00000004 b tPos
00136bec 00000004 b kRepeat
00136bf0 00000004 b kUp
00136bf4 00000004 b kDown
00136bf8 00000004 b kHeld
00136bfc 00000004 b kOld
00136c00 00000004 B hidSharedMem
00136c04 00000014 B hidEvents
00136c18 00000004 B hidMemHandle
00136c1c 00000004 B hidHandle
00136c20 00000004 b irrstRefCount
00136c24 00000004 b csPos
00136c28 00000004 b kHeld
00136c2c 00000004 B irrstSharedMem
00136c30 00000004 B irrstEvent
00136c34 00000004 B irrstMemHandle
00136c38 00000004 B irrstHandle
00136c3c 00000004 b ptmSysmRefCount
00136c40 00000004 b ptmSysmHandle
00136c44 00000004 V __ctru_linear_heap_size
00136c48 00000004 V __ctru_heap_size
00136c4c 00000004 B __ctru_linear_heap
00136c50 00000004 B __ctru_heap
00136c54 00000004 B __system_retAddr
00136c58 00000004 B __system_argv
00136c5c 00000004 B __system_argc
00136c60 b saved_stack
00136c68 00000004 B __3dslink_host
00136c6c 00000004 b srvRefCount
00136c70 00000004 b srvHandle
00136c74 00000004 b arbiter
00136c78 00000004 b currentAddr
00136c7c 00000004 b maxAddr
00136c80 00000004 b minAddr
00136c84 00000004 b srvPmHandle
00136c88 000005c0 b archive_devices
00137248 00000004 b archive_device_cwd
0013724c 00000001 b archive_initialized
00137250 00000004 b init
00137254 00000001 B __eh_globals_init::_S_init
00137258 0000000c b (anonymous namespace)::eh_globals
00137268 0000001c b (anonymous namespace)::emergency_pool
00137284 00000004 b (anonymous namespace)::__new_handler
00137288 0000000c b __sfp_recursive_mutex
00137298 00000168 B __sf
00137400 00000004 B __stdio_exit_handler
00137404 00000028 B __malloc_current_mallinfo
0013742c 00000004 B __malloc_max_total_mem
00137430 00000004 B __malloc_max_sbrked_mem
00137434 00000004 B __malloc_top_pad
00137438 0000000c b __malloc_recursive_mutex
00137444 0000000c b __env_recursive_mutex
00137450 00000004 b initial_env
00137454 00000400 b temp_cwd
00137854 00000004 b __hndl_lock
00137858 00000004 B fake_heap_start
0013785c 00000004 B fake_heap_end
00137860 00000004 b heap_start.0
00137864 B __tls_start
0013846c B __bss_end__
0013846c A __end__
0013846c B __tls_end
