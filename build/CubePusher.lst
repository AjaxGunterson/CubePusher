         w __cxa_pure_virtual
         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w pthread_cancel
         w pthread_getspecific
         w pthread_key_create
         w pthread_key_delete
         w pthread_mutex_lock
         w pthread_mutex_unlock
         w pthread_setspecific
         w __register_frame_info
         w userAppExit
         w userAppInit
00000000 00000802 B __ctru_dev_utf16_buf
00000000 a shift
00000000 a shift
00000000 A __sync_synchronize
00000000 b _TLS_MODULE_BASE_
00000804 00000401 B __ctru_dev_path_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
001000ac t .udivsi3_skip_div0_test
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc T __aeabi_uldivmod
001008f8 00000014 T __restore_core_regs
001008f8 00000014 T restore_core_regs
0010090c T __gnu_Unwind_Restore_VFP
00100914 T __gnu_Unwind_Save_VFP
0010091c T __gnu_Unwind_Restore_VFP_D
00100924 T __gnu_Unwind_Save_VFP_D
0010092c T __gnu_Unwind_Restore_VFP_D_16_to_31
00100934 T __gnu_Unwind_Save_VFP_D_16_to_31
0010093c T __gnu_Unwind_Restore_WMMXD
00100980 T __gnu_Unwind_Save_WMMXD
001009c4 T __gnu_Unwind_Restore_WMMXC
001009d8 T __gnu_Unwind_Save_WMMXC
001009ec 00000024 T ___Unwind_RaiseException
001009ec 00000024 T _Unwind_RaiseException
00100a10 00000024 T ___Unwind_Resume
00100a10 00000024 T _Unwind_Resume
00100a34 00000024 T ___Unwind_Resume_or_Rethrow
00100a34 00000024 T _Unwind_Resume_or_Rethrow
00100a58 00000024 T ___Unwind_ForcedUnwind
00100a58 00000024 T _Unwind_ForcedUnwind
00100a7c 00000024 T ___Unwind_Backtrace
00100a7c 00000024 T _Unwind_Backtrace
00100aa8 00000390 T strcmp
00100e30 t __do_global_dtors_aux
00100e70 t frame_dummy
00100ea0 000007c4 T main
00101664 00000008 T b2PolygonShape::GetChildCount() const
0010166c 00000090 T b2PolygonShape::TestPoint(b2Transform const&, b2Vec2 const&) const
001016fc 00000004 W b2PolygonShape::~b2PolygonShape()
001016fc 00000004 W b2PolygonShape::~b2PolygonShape()
00101700 000000d0 T b2PolygonShape::Clone(b2BlockAllocator*) const
001017d0 00000190 T b2PolygonShape::ComputeMass(b2MassData*, float) const
00101960 000001bc T b2PolygonShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
00101b1c 00000014 W b2PolygonShape::~b2PolygonShape()
00101b30 000000e0 T b2PolygonShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
00101c10 0000006c T b2PolygonShape::SetAsBox(float, float)
00101c7c 00000048 T b2BlockAllocator::b2BlockAllocator()
00101c7c 00000048 T b2BlockAllocator::b2BlockAllocator()
00101cc4 00000048 T b2BlockAllocator::~b2BlockAllocator()
00101cc4 00000048 T b2BlockAllocator::~b2BlockAllocator()
00101d0c 000001a0 T b2BlockAllocator::Allocate(int)
00101eac 00000088 T b2BlockAllocator::Free(void*, int)
00101f34 00000078 t _GLOBAL__sub_I__ZN16b2BlockAllocatorC2Ev
00101fac 00000004 T b2Alloc_Default(int)
00101fb0 00000004 T b2Free_Default(void*)
00101fb4 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
00101fb4 000002a8 T b2Body::b2Body(b2BodyDef const*, b2World*)
0010225c 00000004 T b2Body::~b2Body()
0010225c 00000004 T b2Body::~b2Body()
00102260 0000022c T b2Body::ResetMassData()
0010248c 000000d8 T b2Body::CreateFixture(b2FixtureDef const*)
00102564 00000058 T b2Body::CreateFixture(b2Shape const*, float)
001025bc 0000006c T b2Body::ShouldCollide(b2Body const*) const
00102628 000000ec T b2Body::SynchronizeFixtures()
00102714 00000004 W b2ContactListener::~b2ContactListener()
00102714 00000004 W b2ContactListener::~b2ContactListener()
00102718 00000004 W b2ContactListener::BeginContact(b2Contact*)
0010271c 00000004 W b2ContactListener::EndContact(b2Contact*)
00102720 00000004 W b2ContactListener::PreSolve(b2Contact*, b2Manifold const*)
00102724 00000004 W b2ContactListener::PostSolve(b2Contact*, b2ContactImpulse const*)
00102728 00000014 W b2ContactListener::~b2ContactListener()
0010273c 0000003c T b2ContactManager::b2ContactManager()
0010273c 0000003c T b2ContactManager::b2ContactManager()
00102778 000000ec T b2ContactManager::Destroy(b2Contact*)
00102864 000001d0 T b2ContactManager::Collide()
00102a34 00000184 T b2ContactManager::AddPair(void*, void*)
00102bb8 00000208 W void b2DynamicTree::Query<b2BroadPhase>(b2BroadPhase*, b2AABB const&) const
00102dc0 000001ac W void b2BroadPhase::UpdatePairs<b2ContactManager>(b2ContactManager*)
00102f6c 00000010 T b2ContactManager::FindNewContacts()
00102f7c 00000038 T b2Fixture::b2Fixture()
00102f7c 00000038 T b2Fixture::b2Fixture()
00102fb4 000000d0 T b2Fixture::Create(b2BlockAllocator*, b2Body*, b2FixtureDef const*)
00103084 00000138 T b2Fixture::Destroy(b2BlockAllocator*)
001031bc 000000b0 T b2Fixture::CreateProxies(b2BroadPhase*, b2Transform const&)
0010326c 0000005c T b2Fixture::DestroyProxies(b2BroadPhase*)
001032c8 00000150 T b2Fixture::Synchronize(b2BroadPhase*, b2Transform const&, b2Transform const&)
00103418 000000b0 T b2World::b2World(b2Vec2 const&)
00103418 000000b0 T b2World::b2World(b2Vec2 const&)
001034c8 00000074 T b2World::~b2World()
001034c8 00000074 T b2World::~b2World()
0010353c 00000080 T b2World::CreateBody(b2BodyDef const*)
001035bc 0000018c T b2World::DestroyJoint(b2Joint*)
00103748 000001b4 T b2World::DestroyBody(b2Body*)
001038fc 000004b0 T b2World::Solve(b2TimeStep const&)
00103dac 00000c34 T b2World::SolveTOI(b2TimeStep const&)
001049e0 00000198 T b2World::Step(float, int, int)
00104b78 00000004 W b2ContactFilter::~b2ContactFilter()
00104b78 00000004 W b2ContactFilter::~b2ContactFilter()
00104b7c 0000005c T b2ContactFilter::ShouldCollide(b2Fixture*, b2Fixture*)
00104bd8 00000014 W b2ContactFilter::~b2ContactFilter()
00104bec 00000058 T b2BroadPhase::b2BroadPhase()
00104bec 00000058 T b2BroadPhase::b2BroadPhase()
00104c44 00000028 T b2BroadPhase::~b2BroadPhase()
00104c44 00000028 T b2BroadPhase::~b2BroadPhase()
00104c6c 00000080 T b2BroadPhase::CreateProxy(b2AABB const&, void*)
00104cec 00000050 T b2BroadPhase::DestroyProxy(int)
00104d3c 0000006c T b2BroadPhase::BufferMove(int)
00104da8 00000028 T b2BroadPhase::MoveProxy(int, b2AABB const&, b2Vec2 const&)
00104dd0 000000f4 T b2BroadPhase::QueryCallback(int)
00104ec4 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
00104ee8 0000010c T b2DistanceProxy::Set(b2Shape const*, int)
00104ff4 000002fc W b2Simplex::ReadCache(b2SimplexCache const*, b2DistanceProxy const*, b2Transform const&, b2DistanceProxy const*, b2Transform const&)
001052f0 000000b8 T b2Simplex::Solve2()
001053a8 00000264 T b2Simplex::Solve3()
0010560c 00000738 T b2Distance(b2DistanceOutput*, b2SimplexCache*, b2DistanceInput const*)
00105d44 000000a4 T b2DynamicTree::b2DynamicTree()
00105d44 000000a4 T b2DynamicTree::b2DynamicTree()
00105de8 00000018 T b2DynamicTree::~b2DynamicTree()
00105de8 00000018 T b2DynamicTree::~b2DynamicTree()
00105e00 0000012c T b2DynamicTree::AllocateNode()
00105f2c 00000088 T b2DynamicTree::FreeNode(int)
00105fb4 00000658 T b2DynamicTree::Balance(int)
0010660c 000004b4 T b2DynamicTree::InsertLeaf(int)
00106ac0 00000084 T b2DynamicTree::CreateProxy(b2AABB const&, void*)
00106b44 00000150 T b2DynamicTree::RemoveLeaf(int)
00106c94 000000e4 T b2DynamicTree::DestroyProxy(int)
00106d78 000001ac T b2DynamicTree::MoveProxy(int, b2AABB const&, b2Vec2 const&)
00106f24 00000024 t b2DistanceProxy::GetVertex(int) const [clone .part.0]
00106f48 000004bc W b2SeparationFunction::FindMinSeparation(int*, int*, float) const
00107404 00000304 W b2SeparationFunction::Evaluate(int, int, float) const
00107708 00000af0 T b2TimeOfImpact(b2TOIOutput*, b2TOIInput const*)
001081f8 00000018 t _GLOBAL__sub_I_b2Vec2_zero
00108210 0000001c T b2StackAllocator::b2StackAllocator()
00108210 0000001c T b2StackAllocator::b2StackAllocator()
0010822c 00000058 T b2StackAllocator::~b2StackAllocator()
0010822c 00000058 T b2StackAllocator::~b2StackAllocator()
00108284 000000b0 T b2StackAllocator::Allocate(int)
00108334 000000b0 T b2StackAllocator::Free(void*)
001083e4 00000004 T b2Timer::b2Timer()
001083e4 00000004 T b2Timer::b2Timer()
001083e8 00000004 T b2Timer::Reset()
001083ec 0000000c T b2Timer::GetMilliseconds() const
001083f8 00000118 T b2Contact::InitializeRegisters()
00108510 0000010c T b2Contact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010861c 00000120 T b2Contact::Destroy(b2Contact*, b2BlockAllocator*)
0010873c 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
0010873c 000000d8 T b2Contact::b2Contact(b2Fixture*, int, b2Fixture*, int)
00108814 00000280 T b2Contact::Update(b2ContactListener*)
00108a94 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
00108a94 00000004 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
00108a98 00000014 W b2EdgeAndCircleContact::~b2EdgeAndCircleContact()
00108aac 00000034 T b2EdgeAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00108ae0 00000040 T b2EdgeAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
00108b20 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
00108b20 00000094 T b2EdgeAndCircleContact::b2EdgeAndCircleContact(b2Fixture*, b2Fixture*)
00108bb4 00000038 T b2EdgeAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00108bec 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
00108bec 00000004 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
00108bf0 00000014 W b2EdgeAndPolygonContact::~b2EdgeAndPolygonContact()
00108c04 00000034 T b2EdgeAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00108c38 00000040 T b2EdgeAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
00108c78 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
00108c78 00000094 T b2EdgeAndPolygonContact::b2EdgeAndPolygonContact(b2Fixture*, b2Fixture*)
00108d0c 00000038 T b2EdgeAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00108d44 000000a8 t b2Island::Report(b2ContactVelocityConstraint const*) [clone .part.0]
00108dec 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
00108dec 000000b0 T b2Island::b2Island(int, int, int, b2StackAllocator*, b2ContactListener*)
00108e9c 0000004c T b2Island::~b2Island()
00108e9c 0000004c T b2Island::~b2Island()
00108ee8 00000634 T b2Island::Solve(b2Profile*, b2TimeStep const&, b2Vec2 const&, bool)
0010951c 00000360 T b2Island::SolveTOI(b2TimeStep const&, int, int)
0010987c 00000140 T b2Joint::Destroy(b2Joint*, b2BlockAllocator*)
001099bc 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
001099bc 00000004 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
001099c0 00000014 W b2PolygonAndCircleContact::~b2PolygonAndCircleContact()
001099d4 00000034 T b2PolygonAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00109a08 00000040 T b2PolygonAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
00109a48 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
00109a48 00000094 T b2PolygonAndCircleContact::b2PolygonAndCircleContact(b2Fixture*, b2Fixture*)
00109adc 00000038 T b2PolygonAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00109b14 00000004 W b2PolygonContact::~b2PolygonContact()
00109b14 00000004 W b2PolygonContact::~b2PolygonContact()
00109b18 00000014 W b2PolygonContact::~b2PolygonContact()
00109b2c 00000034 T b2PolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
00109b60 00000040 T b2PolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
00109ba0 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
00109ba0 00000094 T b2PolygonContact::b2PolygonContact(b2Fixture*, b2Fixture*)
00109c34 00000038 T b2PolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
00109c6c 000000dc T b2CollideCircles(b2Manifold*, b2CircleShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
00109d48 0000039c T b2CollidePolygonAndCircle(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0010a0e4 00000310 T b2CollideEdgeAndCircle(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2CircleShape const*, b2Transform const&)
0010a3f4 00000840 T b2CollideEdgeAndPolygon(b2Manifold*, b2EdgeShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0010ac34 00000130 t b2FindMaxSeparation(int*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&) [clone .constprop.0]
0010ad64 000004c8 T b2CollidePolygons(b2Manifold*, b2PolygonShape const*, b2Transform const&, b2PolygonShape const*, b2Transform const&)
0010b22c 000003e8 T b2WorldManifold::Initialize(b2Manifold const*, b2Transform const&, float, b2Transform const&, float)
0010b614 00000108 T b2ClipSegmentToLine(b2ClipVertex*, b2ClipVertex const*, b2Vec2 const&, float, int)
0010b71c 000000b8 T b2TestOverlap(b2Shape const*, int, b2Shape const*, int, b2Transform const&, b2Transform const&)
0010b7d4 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0010b7d4 00000004 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0010b7d8 00000014 W b2ChainAndCircleContact::~b2ChainAndCircleContact()
0010b7ec 0000008c T b2ChainAndCircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0010b878 000000b8 T b2ChainAndCircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010b930 00000040 T b2ChainAndCircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0010b970 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0010b970 00000004 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0010b974 00000014 W b2ChainAndPolygonContact::~b2ChainAndPolygonContact()
0010b988 0000008c T b2ChainAndPolygonContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0010ba14 000000b8 T b2ChainAndPolygonContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010bacc 00000040 T b2ChainAndPolygonContact::Destroy(b2Contact*, b2BlockAllocator*)
0010bb0c 00000004 W b2CircleContact::~b2CircleContact()
0010bb0c 00000004 W b2CircleContact::~b2CircleContact()
0010bb10 00000014 W b2CircleContact::~b2CircleContact()
0010bb24 00000034 T b2CircleContact::Evaluate(b2Manifold*, b2Transform const&, b2Transform const&)
0010bb58 00000040 T b2CircleContact::Destroy(b2Contact*, b2BlockAllocator*)
0010bb98 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0010bb98 00000094 T b2CircleContact::b2CircleContact(b2Fixture*, b2Fixture*)
0010bc2c 00000038 T b2CircleContact::Create(b2Fixture*, int, b2Fixture*, int, b2BlockAllocator*)
0010bc64 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0010bc64 000002b0 T b2ContactSolver::b2ContactSolver(b2ContactSolverDef*)
0010bf14 00000024 T b2ContactSolver::~b2ContactSolver()
0010bf14 00000024 T b2ContactSolver::~b2ContactSolver()
0010bf38 00000444 T b2ContactSolver::InitializeVelocityConstraints()
0010c37c 00000114 T b2ContactSolver::WarmStart()
0010c490 00000570 T b2ContactSolver::SolveVelocityConstraints()
0010ca00 00000068 T b2ContactSolver::StoreImpulses()
0010ca68 00000304 W b2PositionSolverManifold::Initialize(b2ContactPositionConstraint*, b2Transform const&, b2Transform const&, int)
0010cd6c 000002a4 T b2ContactSolver::SolvePositionConstraints()
0010d010 000002d8 T b2ContactSolver::SolveTOIPositionConstraints(int, int)
0010d2e8 000000b8 T b2ChainShape::GetChildEdge(b2EdgeShape*, int) const
0010d3a0 00000008 T b2EdgeShape::GetChildCount() const
0010d3a8 00000008 T b2EdgeShape::TestPoint(b2Transform const&, b2Vec2 const&) const
0010d3b0 00000040 T b2EdgeShape::ComputeMass(b2MassData*, float) const
0010d3f0 00000004 W b2EdgeShape::~b2EdgeShape()
0010d3f0 00000004 W b2EdgeShape::~b2EdgeShape()
0010d3f4 000000b8 T b2EdgeShape::Clone(b2BlockAllocator*) const
0010d4ac 00000014 W b2EdgeShape::~b2EdgeShape()
0010d4c0 000001cc T b2EdgeShape::RayCast(b2RayCastOutput*, b2RayCastInput const&, b2Transform const&, int) const
0010d68c 000000b0 T b2EdgeShape::ComputeAABB(b2AABB*, b2Transform const&, int) const
0010d73c 00000044 t C2Di_FrameEndHook
0010d780 0000036c T C2D_Init
0010daec 0000004c T C2D_Fini
0010db38 000000b8 T C2D_Prepare
0010dbf0 00000048 T C2D_Flush
0010dc38 00000104 T C2D_SceneSize
0010dd3c 00000058 T C2D_CreateScreenTarget
0010dd94 00000064 T C2D_TargetClear
0010ddf8 00000058 T C2Di_AppendQuad
0010de50 00000040 T C2Di_AppendVtx
0010de90 00000550 T C2Di_Update
0010e3e0 00000158 T C2D_DrawRectangle
0010e538 00000018 t C2Di_GlyphComp
0010e550 00000140 t C2Di_CalcLineWidths
0010e690 000001dc T C2D_TextBufNew
0010e86c 00000004 T C2D_TextBufDelete
0010e870 0000000c T C2D_TextBufClear
0010e87c 000001c8 T C2D_TextFontParseLine
0010ea44 000000a8 T C2D_TextFontParse
0010eaec 00000014 T C2D_TextParse
0010eb00 00000030 T C2D_TextOptimize
0010eb30 00000f6c T C2D_DrawText
0010fa9c 00000044 T C2D_FontGlyphIndexFromCodePoint
0010fae0 00000078 T C2D_FontCalcGlyphPos
0010fb58 00000028 T AttrInfo_Init
0010fb80 00000094 T AttrInfo_AddLoader
0010fc14 00000054 T C3D_SetAttrInfo
0010fc68 00000080 T C3Di_AttrInfoBind
0010fce8 00000004 W C3Di_LightEnvUpdate
0010fcec 00000004 W C3Di_LightEnvDirty
0010fcf0 000000b4 t C3Di_AptEventHook
0010fda4 00000004 W C3Di_GasUpdate
0010fda8 000001d0 T C3D_Init
0010ff78 00000098 T C3D_SetViewport
00110010 000004e8 T C3Di_UpdateContext
001104f8 000000e0 T C3Di_SplitFrame
001105d8 00000044 T C3D_Fini
0011061c 00000194 T C3D_BindProgram
001107b0 00000024 T BufInfo_Init
001107d4 00000080 T BufInfo_Add
00110854 0000003c T C3D_SetBufInfo
00110890 00000048 T C3Di_BufInfoBind
001108d8 0000021c T C3D_DrawElements
00110af4 00000040 T C3D_DepthMap
00110b34 0000001c T C3D_CullFace
00110b50 00000040 T C3D_StencilTest
00110b90 00000024 T C3D_StencilOp
00110bb4 0000001c T C3D_BlendingColor
00110bd0 00000024 T C3D_EarlyDepthTest
00110bf4 0000002c T C3D_DepthTest
00110c20 0000002c T C3D_AlphaTest
00110c4c 00000050 T C3D_AlphaBlend
00110c9c 00000030 T C3D_FragOpMode
00110ccc 00000044 T C3D_FragOpShadow
00110d10 000001ac T C3Di_EffectBind
00110ebc 0000001c T C3D_CalcColorBufSize
00110ed8 0000001c T C3D_CalcDepthBufSize
00110ef4 00000044 T C3D_SetFrameBuf
00110f38 0000016c T C3Di_FrameBufBind
001110a4 000000c8 T C3D_FrameBufClear
0011116c 00000044 T C3D_FrameBufTransfer
001111b0 000000a8 T C3D_ImmSendAttrib
00111258 00000070 T C3D_ProcTexInit
001112c8 00000054 T C3D_ProcTexBind
0011131c 0000005c T C3D_ProcTexLutBind
00111378 000000a4 T ProcTexLut_FromArray
0011141c 00000178 T C3Di_ProcTexUpdate
00111594 00000068 T C3Di_ProcTexDirty
001115fc 0000004c t onVBlank0
00111648 0000004c t onVBlank1
00111694 00000080 t C3Di_RenderTargetDestroy
00111714 000000f4 t onQueueFinish
00111808 00000038 T C3Di_RenderQueueEnableVBlank
00111840 00000030 T C3Di_RenderQueueDisableVBlank
00111870 00000060 T C3Di_RenderQueueInit
001118d0 000000b4 T C3Di_RenderQueueExit
00111984 00000034 T C3Di_RenderQueueWaitDone
001119b8 000000e8 T C3D_FrameBegin
00111aa0 00000048 T C3D_FrameDrawOn
00111ae8 00000058 T C3D_FrameSplit
00111b40 000001d0 T C3D_FrameEnd
00111d10 0000001c T C3D_FrameEndHook
00111d2c 00000170 T C3D_RenderTargetCreate
00111e9c 000000a8 T C3D_RenderTargetSetOutput
00111f44 00000034 T C3D_GetTexEnv
00111f78 00000024 T C3Di_TexEnvBind
00111f9c 00000044 T C3D_TexBind
00111fe0 0000014c T C3Di_SetTex
0011212c 00000290 T C3D_UpdateUniforms
001123bc 000000c0 T C3Di_DirtyUniforms
0011247c 000000d8 T C3Di_LoadShaderUniforms
00112554 00000028 T C3Di_ClearShaderUniforms
0011257c 000000cc T Mtx_Ortho
00112648 000000cc T Mtx_OrthoTilt
00112714 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00112738 00000004 t addrMapNodeDestructor(rbtree_node*)
0011273c 00000120 T linearMemAlign
0011285c 00000008 T linearAlloc
00112864 0000005c T linearFree
001128c0 00000084 T MemPool::CoalesceRight(MemBlock*)
00112944 00000150 T MemPool::Allocate(MemChunk&, unsigned long, int)
00112a94 000000fc T MemPool::Deallocate(MemChunk const&)
00112b90 00000030 T MemPool::GetFreeSpace()
00112bc0 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00112be4 00000004 t addrMapNodeDestructor(rbtree_node*)
00112be8 00000244 T vramMemAlignAt
00112e2c 0000000c T vramAlloc
00112e38 0000000c T vramAllocAt
00112e44 00000090 T vramFree
00112ed4 00000094 T fontEnsureMapped
00112f68 00000100 T fontGlyphIndexFromCodePoint
00113068 000001ec T fontCalcGlyphPos
00113254 000000d0 t gfxPresentFramebuffer
00113324 0000001c T gfxIsWide
00113340 000000ec T gfxSetScreenFormat
0011342c 000000d8 T gfxInit
00113504 00000010 T gfxInitDefault
00113514 000000b4 T gfxExit
001135c8 000000a0 T gfxGetFramebuffer
00113668 00000030 T gfxScreenSwapBuffers
00113698 00000074 T osConvertVirtToPhys
0011370c 00000034 T __ctru_speedup_config
00113740 0000013c T GPUCMD_Add
0011387c 000000b0 T GPUCMD_Split
0011392c 00000034 T f32tof16
00113960 00000034 T f32tof24
00113994 00000038 T f32tof31
001139cc 00000010 T GX_BindQueue
001139dc 00000078 T GX_ProcessCommandList
00113a54 00000074 T GX_MemoryFill
00113ac8 00000070 T GX_DisplayTransfer
00113b38 00000068 t gxCmdQueueDoCommands.part.0
00113ba0 000000c8 T gxCmdQueueInterrupt
00113c68 0000004c T gxCmdQueueClear
00113cb4 000000f8 T gxCmdQueueAdd
00113dac 00000080 T gxCmdQueueRun
00113e2c 00000060 T gxCmdQueueStop
00113e8c 0000008c T gxCmdQueueWait
00113f18 000001d0 T shaderInstanceInit
001140e8 00000018 T shaderInstanceGetUniformLocation
00114100 0000001c T shaderProgramInit
0011411c 00000064 T shaderProgramFree
00114180 00000080 T shaderProgramSetVsh
00114200 000008d0 T shaderProgramConfigure
00114ad0 000001dc t DVLE_GenerateOutmap.part.0
00114cac 000001b0 T DVLB_ParseFile
00114e5c 00000038 T DVLB_Free
00114e94 00000074 T DVLE_GetUniformRegister
00114f08 000001b0 t aptConvertScreenForCapture
001150b8 00000008 W aptDspSleep
001150c0 00000004 W aptDspWakeup
001150c4 00000004 W aptDspCancel
001150c8 00000158 T aptSendCommand
00115220 00000044 t aptExitProcess
00115264 00000380 T aptExit
001155e4 000000d8 T aptHandleSleep
001156bc 00000030 T aptHook
001156ec 00000030 T aptUnhook
0011571c 00000084 T APT_SleepIfShellClosed
001157a0 00000078 T aptSetSleepAllowed
00115818 00000084 T APT_UnlockTransition
001158a0 00000478 t aptEventHandler
00115d18 000000b0 T APT_ReceiveParameter
00115dc8 000000ac t aptReceiveParameter.constprop.0
00115e78 00000294 t aptScreenTransfer
0011610c 000002c8 t aptWaitForWakeUp.isra.0
001163d4 000000f4 T aptJumpToHomeMenu
001164c8 00000048 T aptMainLoop
00116510 0000022c T aptInit
0011673c 0000007c T APT_CheckNew3DS
001167b8 00000048 T APT_GetSharedFont
00116800 000000a4 T cfguInit
001168a4 0000003c T cfguExit
001168e0 000000d0 T fsInit
001169b0 0000003c T fsExit
001169ec 00000060 T fsExemptFromSession
00116a4c 00000050 T fsUnexemptFromSession
00116a9c 000000cc T FSUSER_OpenFile
00116b68 000000bc T FSUSER_DeleteFile
00116c24 000000f8 T FSUSER_RenameFile
00116d1c 000000bc T FSUSER_DeleteDirectory
00116dd8 000000d4 T FSUSER_CreateFile
00116eac 000000c4 T FSUSER_CreateDirectory
00116f70 000000f8 T FSUSER_RenameDirectory
00117068 000000b4 T FSUSER_OpenDirectory
0011711c 00000094 T FSUSER_OpenArchive
001171b0 0000008c T FSUSER_CloseArchive
0011723c 00000074 T FSUSER_GetSdmcArchiveResource
001172b0 00000064 T FSUSER_IsSdmcWritable
00117314 00000058 T FSFILE_Read
0011736c 00000060 T FSFILE_Write
001173cc 00000038 T FSFILE_GetSize
00117404 00000028 T FSFILE_SetSize
0011742c 0000003c T FSFILE_Close
00117468 00000024 T FSFILE_Flush
0011748c 00000050 T FSDIR_Read
001174dc 0000003c T FSDIR_Close
00117518 00000c70 t gspHardwareInit
00118188 00000248 T gspInit
001183d0 000000e4 T gspExit
001184b4 00000010 T gspHasGpuRight
001184c4 000000a0 T gspPresentBuffer
00118564 00000030 T gspSetEventCallback
00118594 00000044 T gspWaitForEvent
001185d8 0000004c T gspWaitForAnyEvent
00118624 00000160 t gspEventThreadMain
00118784 00000130 T gspSubmitGxCommand
001188b4 00000050 T GSPGPU_FlushDataCache
00118904 00000034 T GSPGPU_SetLcdForceBlack
00118938 00000068 T GSPGPU_AcquireRight
001189a0 00000048 T GSPGPU_ReleaseRight
001189e8 0000007c T GSPGPU_ImportDisplayCaptureInfo
00118a64 0000002c T GSPGPU_SaveVramSysArea
00118a90 0000002c T GSPGPU_RestoreVramSysArea
00118abc 00000024 W hidShouldUseIrrst
00118ae0 0000018c T hidInit
00118c6c 000000e8 T hidExit
00118d54 000002a4 T hidScanInput
00118ff8 00000010 T hidKeysHeld
00119008 00000010 T hidKeysDown
00119018 00000018 T hidTouchRead
00119030 00000160 T irrstInit
00119190 000000cc T irrstExit
0011925c 000000b4 T irrstScanInput
00119310 00000024 T irrstKeysHeld
00119334 00000074 T ptmSysmInit
001193a8 0000003c T ptmSysmExit
001193e4 00000034 T PTMSYSM_ConfigureNew3DSCPU
00119418 00000074 T rbtree_find
0011948c 00000010 T rbtree_init
0011949c 0000019c t do_insert
00119638 00000008 T rbtree_insert
00119640 00000310 T rbtree_remove
00119950 00000090 T rbtree_rotate
001199e0 0000013c T decode_utf8
00119b1c 000000e8 T utf16_to_utf8
00119c04 000000c0 T utf8_to_utf16
00119cc8 000001e0 W __system_allocateHeaps
00119ea8 00000038 W __libctru_init
00119ee0 00000160 W __system_initArgv
0011a040 00000030 T __syscall_getreent
0011a070 00000004 T __syscall_lock_acquire
0011a074 00000004 T __syscall_lock_release
0011a078 00000004 T __syscall_lock_acquire_recursive
0011a07c 00000004 T __syscall_lock_release_recursive
0011a080 00000004 T __syscall_exit
0011a084 00000050 T initThreadVars
0011a0d4 00000080 T __system_initSyscalls
0011a154 T svcControlMemory
0011a174 T svcQueryMemory
0011a1a4 T svcExitProcess
0011a1ac T svcCreateThread
0011a1cc T svcExitThread
0011a1d4 T svcSleepThread
0011a1dc T svcReleaseMutex
0011a1e4 T svcCreateEvent
0011a1f8 T svcSignalEvent
0011a200 T svcClearEvent
0011a208 T svcMapMemoryBlock
0011a210 T svcUnmapMemoryBlock
0011a218 T svcCreateAddressArbiter
0011a22c T svcArbitrateAddressNoTimeout
0011a234 T svcCloseHandle
0011a23c T svcWaitSynchronization
0011a244 T svcWaitSynchronizationN
0011a26c T svcDuplicateHandle
0011a280 T svcGetSystemTick
0011a288 T svcConnectToPort
0011a29c T svcSendSyncRequest
0011a2a4 T svcGetResourceLimit
0011a2b8 T svcGetResourceLimitLimitValues
0011a2c0 T svcGetResourceLimitCurrentValues
0011a2c8 T svcBreak
0011a2d0 T __aeabi_read_tp
0011a2dc W initSystem
0011a32c W __ctru_exit
0011a340 00000084 W envGetHandle
0011a3c4 00000050 W envDestroyHandles
0011a414 0000012c T srvInit
0011a540 00000058 T srvExit
0011a598 00000060 T srvEnableNotification
0011a5f8 000000a0 T srvGetServiceHandleDirect
0011a698 00000038 T srvGetServiceHandle
0011a6d0 00000034 T srvSubscribe
0011a704 00000060 T srvReceiveNotification
0011a764 00000038 T srvPublishToSubscriber
0011a79c 0000000c T __sync_init
0011a7a8 00000018 T __sync_fini
0011a7c0 0000002c T syncArbitrateAddress
0011a7ec 000000b0 T LightLock_Lock
0011a89c 00000040 T LightLock_Unlock
0011a8dc 00000030 T RecursiveLock_Lock
0011a90c 00000054 T RecursiveLock_Unlock
0011a960 00000040 T LightEvent_Init
0011a9a0 000000a4 T LightEvent_Clear
0011aa44 000000c8 T LightEvent_Signal
0011ab0c 00000050 T LightEvent_TryWait
0011ab5c 000000a0 T LightEvent_Wait
0011abfc 000001d4 T threadCreate
0011add0 0000002c T threadFree
0011adfc 00000024 T threadJoin
0011ae20 00000030 T threadGetCurrent
0011ae50 00000040 T threadExit
0011ae90 00000020 t _thread_begin
0011aeb0 00000090 t mappableFindAddressWithin
0011af40 00000028 T mappableInit
0011af68 00000080 T mappableAlloc
0011afe8 00000004 T mappableFree
0011afec 0000000c T srvPmGetSessionHandle
0011aff8 0000005c T rbtree_node_next
0011b054 00000064 T decode_utf16
0011b0b8 00000054 T encode_utf16
0011b10c 000000e0 T encode_utf8
0011b1ec 00000030 W __appExit
0011b21c 00000030 W __appInit
0011b24c 00000090 W __libctru_exit
0011b2dc 00000014 t archive_link
0011b2f0 00000014 t archive_dirreset
0011b304 00000014 t archive_chmod
0011b318 00000024 t error_cmp
0011b33c 00000050 t archive_translate_error
0011b38c 000000c4 t archive_seek
0011b450 00000078 t _archiveInit.part.0
0011b4c8 000000c4 t archiveFindDevice.part.0
0011b58c 00000290 t archive_utf16path
0011b81c 0000009c t _archiveUnmountDeviceStruct.part.0
0011b8b8 00000014 t archive_statvfs
0011b8cc 00000014 t archive_fchmod
0011b8e0 00000168 t _archiveMountDevice
0011ba48 000000e8 t archive_diropen
0011bb30 000000a4 t archive_fstat
0011bbd4 0000006c t archive_fsync
0011bc40 0000006c t archive_close
0011bcac 00000070 t archive_dirclose
0011bd1c 000000e4 t sdmc_statvfs
0011be00 000000ec t archive_chdir
0011beec 0000007c t archive_ftruncate
0011bf68 000000ac t archive_read
0011c014 000000a4 t archive_unlink
0011c0b8 000000bc t archive_rmdir
0011c174 000000dc t archive_mkdir
0011c250 00000194 t archive_stat
0011c3e4 0000015c t archive_dirnext
0011c540 00000124 t archive_write
0011c668 00000210 t archive_open
0011c878 00000268 t archive_rename
0011cae0 0000019c T archiveMountSdmc
0011cc7c 00000054 T archiveUnmountAll
0011ccd0 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0011cd2c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0011cd40 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0011cd40 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
0011cd60 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0011cd8c 00000064 T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0011cdf0 0000007c T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0011ce6c 000000d4 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0011cf40 00000004 T operator delete(void*)
0011cf44 00000004 T operator delete(void*, unsigned int)
0011cf48 T __cxa_end_cleanup
0011cf58 00000134 T __cxa_type_match
0011d08c 000000b4 T __cxa_begin_cleanup
0011d140 000000b4 T __gnu_end_cleanup
0011d1f4 00000004 T std::exception::~exception()
0011d1f4 00000004 T std::exception::~exception()
0011d1f8 00000004 T std::bad_exception::~bad_exception()
0011d1f8 00000004 T std::bad_exception::~bad_exception()
0011d1fc 0000000c T transaction clone for std::bad_exception::what() const
0011d1fc 0000000c T std::bad_exception::what() const
0011d208 00000018 T std::bad_exception::~bad_exception()
0011d220 0000003c t eh_globals_dtor(void*)
0011d25c 00000038 T __cxa_get_globals_fast
0011d294 00000074 T __cxa_get_globals
0011d308 00000040 t _GLOBAL__sub_I__ZN17__eh_globals_init7_S_initE
0011d348 00000034 t _GLOBAL__sub_D__ZN17__eh_globals_init7_S_initE
0011d37c 00000148 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0011d4c4 00000058 t base_of_encoded_value(unsigned char, _Unwind_Context*)
0011d51c 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0011d5f4 000006dc T __gxx_personality_v0
0011dcd0 00000014 T __cxxabiv1::__terminate(void (*)())
0011dce4 00000018 T std::terminate()
0011dcfc 0000000c T __cxxabiv1::__unexpected(void (*)())
0011dd08 00000018 T std::unexpected()
0011dd20 00000014 T std::get_terminate()
0011dd34 00000014 T std::get_unexpected()
0011dd48 0000005c T operator new(unsigned int)
0011dda4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0011dda4 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0011ddc4 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0011ddf0 00000138 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0011df28 00000088 T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0011dfb0 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0011dff4 00000004 T std::type_info::~type_info()
0011dff4 00000004 T std::type_info::~type_info()
0011dff8 00000008 T std::type_info::__is_pointer_p() const
0011dff8 00000008 T std::type_info::__is_function_p() const
0011e000 0000000c T std::bad_alloc::what() const
0011e00c 00000020 T std::bad_alloc::~bad_alloc()
0011e00c 00000020 T std::bad_alloc::~bad_alloc()
0011e02c 0000002c T std::bad_alloc::~bad_alloc()
0011e058 0000000c W __gnu_cxx::__concurrence_lock_error::what() const
0011e064 0000000c W __gnu_cxx::__concurrence_unlock_error::what() const
0011e070 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011e070 00000020 W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011e090 0000002c W __gnu_cxx::__concurrence_lock_error::~__concurrence_lock_error()
0011e0bc 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0011e0bc 00000020 W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0011e0dc 0000002c W __gnu_cxx::__concurrence_unlock_error::~__concurrence_unlock_error()
0011e108 0000002c W __gnu_cxx::__throw_concurrence_lock_error()
0011e134 0000002c W __gnu_cxx::__throw_concurrence_unlock_error()
0011e160 00000128 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
0011e288 000000d8 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
0011e360 00000044 T __cxa_allocate_exception
0011e3a4 0000002c T __cxa_free_exception
0011e3d0 000001b0 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
0011e580 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0011e5f0 0000002c T __cxa_call_terminate
0011e61c 00000148 T __cxa_call_unexpected
0011e764 000000cc T __cxa_begin_catch
0011e830 000000e0 T __cxa_end_catch
0011e910 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0011e970 00000054 T __cxa_init_primary_exception
0011e9c4 00000054 T __cxa_throw
0011ea18 000000b0 T __cxa_rethrow
0011eac8 00000014 T std::get_new_handler()
0011eae0 0000025c T sinf
0011ed3c 00000050 T sqrtf
0011ed8c 00000024 t with_errnof
0011edb0 0000001c T __math_invalidf
0011edcc 000000c0 T ceilf
0011ee90 0000021c T cosf
0011f0ac 000000c0 T floorf
0011f16c 00000008 T __ieee754_sqrtf
0011f174 00000120 T __udivmoddi4
0011f294 00000018 t selfrel_offset31
0011f2ac 00000090 t search_EIT_table
0011f33c 00000040 t __gnu_unwind_get_pr_addr
0011f37c 0000010c t get_eit_entry
0011f488 00000088 t restore_non_core_regs
0011f510 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0011f524 00000004 t _Unwind_DebugHook
0011f528 00000064 t unwind_phase2
0011f58c 00000140 t unwind_phase2_forced
0011f6cc 000000a4 T __gnu_Unwind_RaiseException
0011f770 00000028 T __gnu_Unwind_ForcedUnwind
0011f798 00000074 T __gnu_Unwind_Resume
0011f80c 0000002c T __gnu_Unwind_Resume_or_Rethrow
0011f838 00000004 T _Unwind_Complete
0011f83c 00000018 T _Unwind_DeleteException
0011f854 00000064 T _Unwind_VRS_Get
0011f8b8 0000002c t _Unwind_GetGR
0011f8e4 00000064 T _Unwind_VRS_Set
0011f948 0000002c t _Unwind_SetGR
0011f974 000000c0 T __gnu_Unwind_Backtrace
0011fa34 00000410 t __gnu_unwind_pr_common
0011fe44 00000008 T __aeabi_unwind_cpp_pr0
0011fe4c 00000008 W __aeabi_unwind_cpp_pr1
0011fe54 00000008 W __aeabi_unwind_cpp_pr2
0011fe5c 00000458 T _Unwind_VRS_Pop
001202b4 00000064 t next_unwind_byte
00120318 0000002c t _Unwind_GetGR.constprop.0
00120344 00000004 t unwind_UCB_from_context
00120348 00000460 T __gnu_unwind_execute
001207a8 00000048 T __gnu_unwind_frame
001207f0 00000010 T _Unwind_GetRegionStart
00120800 0000001c T _Unwind_GetLanguageSpecificData
0012081c 00000008 T _Unwind_GetDataRelBase
00120824 00000008 T _Unwind_GetTextRelBase
0012082c 000000d8 T strncmp
00120904 00000130 T strchr
00120a34 00000024 T getenv
00120a58 0000005c T strlen
00120ab4 0000005c T __assert_func
00120b10 0000003c T fiprintf
00120b4c 000000d4 T memcmp
00120c20 000001e4 t _strtoul_l.isra.0
00120e04 00000034 T strtoul
00120e38 000000e4 T strncat
00120f1c 00000078 T bsearch
00120f94 00000020 T calloc
00120fb4 0000096c T qsort
00121920 00000014 T abort
00121934 00000148 T _fclose_r
00121a7c 000000c0 T _calloc_r
00121b3c 00000144 T __smakebuf_r
00121c80 00000020 T memalign
00121ca0 0000001c t stdio_exit_handler
00121cbc 0000005c t cleanup_stdio
00121d18 00000154 t global_stdio_init.part.0
00121e6c 0000005c T __sinit
00121ec8 0000000c T __sfp_lock_acquire
00121ed4 0000000c T __sfp_lock_release
00121ee0 000007e8 T _malloc_r
001226c8 000001b4 t quorem
00122880 00001370 T _dtoa_r
00123bf0 000000a0 T _wcrtomb_r
00123c90 000000f8 T _malloc_trim_r
00123d88 00000300 T _free_r
00124088 0000004c T strnlen
001240d4 0000000c T __errno
001240e0 00000034 T malloc
00124114 00000018 T free
0012412c 00000130 T memcpy
0012425c 000000c8 T _findenv_r
00124324 000000e8 T memset
0012440c 000004a4 T _realloc_r
001248b0 00000070 T _fwalk_sglue
00124920 0000000c T __malloc_lock
0012492c 0000000c T __malloc_unlock
00124938 00000004 W __call_exitprocs
0012493c 00000030 T exit
0012496c 000000d4 T snprintf
00124a40 000000c4 T strncpy
00124b04 00000028 T _wcsrtombs_r
00124b2c 00000084 T __libc_init_array
00124bb0 00000194 T __swsetup_r
00124d44 00000228 T __sflush_r
00124f6c 00000094 T _fflush_r
00125000 00000088 T frexp
00125088 00000160 T memmove
001251e8 00000090 T _raise_r
00125278 00000018 T raise
00125290 0000000c T __env_lock
0012529c 0000000c T __env_unlock
001252a8 00000088 T _Balloc
00125330 0000001c T _Bfree
0012534c 000000f4 T __multadd
00125440 00000080 T __hi0bits
001254c0 000000f4 T __lo0bits
001255b4 000000a4 T __i2b
00125658 00000208 T __multiply
00125860 00000130 T __pow5mult
00125990 00000138 T __lshift
00125ac8 00000058 T __mcmp
00125b20 000001f0 T __mdiff
00125d10 00000120 T __d2b
00125e30 00000024 T __locale_mb_cur_max
00125e54 000000a4 T __ssprint_r
00125ef8 000005e4 t get_arg
001264dc 00002264 T _vfiprintf_r
00128740 000000b8 t __sbprintf
001287f8 00000150 T _memalign_r
00128948 000000e0 T memchr
00128a28 00000160 T _wcsnrtombs_l
00128b88 00000064 T _wcsnrtombs_r
00128bec 00000324 T __utf8_mbtowc
00128f10 0000003c T __libc_fini_array
00128f4c 00000030 T __sprint_r
00128f7c 00000044 T __sread
00128fc0 00000068 T __swrite
00129028 00000040 T __sseek
00129068 00000008 T __sclose
00129070 00000024 T _localeconv_r
00129094 000005e4 t get_arg
00129678 0000335c T _svfprintf_r
0012c9d4 00000128 T __ssputs_r
0012cafc 000000f0 T __utf8_wctomb
0012cbec 00000480 T __sfvwrite_r
0012d06c 00000020 T _exit
0012d08c 0000013c T chdir
0012d1c8 000001cc T _concatenate_path
0012d394 00000088 T _fstat_r
0012d41c 00000014 T _getpid_r
0012d430 0000002c T __getreent
0012d45c 0000003c T __get_handle
0012d498 000000f4 T _close_r
0012d58c 00000008 t null_write
0012d594 00000018 T setDefaultDevice
0012d5ac 000000c8 T FindDevice
0012d674 00000028 T RemoveDevice
0012d69c 00000098 T AddDevice
0012d734 00000020 T GetDeviceOpTab
0012d754 00000008 T _isatty_r
0012d75c 00000014 T _kill_r
0012d770 0000008c T _lseek_r
0012d7fc 00000088 T _read_r
0012d884 00000078 W _sbrk_r
0012d8fc 0000001c T __libc_lock_acquire
0012d918 0000001c T __libc_lock_release
0012d934 0000001c T __libc_lock_acquire_recursive
0012d950 0000001c T __libc_lock_release_recursive
0012d96c 00000088 T _write_r
0012d9f4 00000048 T strrchr
0012da3c T _fini
0012f3fc r .LC2
001307c8 00000009 V typeinfo name for b2Shape
001307d4 00000008 V typeinfo for b2Shape
001307dc 0000000c R typeinfo for b2PolygonShape
001307e8 00000011 R typeinfo name for b2PolygonShape
001307fc 00000028 R vtable for b2PolygonShape
00130824 00000038 r b2_blockSizes
0013085c 00000014 V typeinfo name for b2ContactListener
00130870 00000008 V typeinfo for b2ContactListener
00130878 00000020 V vtable for b2ContactListener
00130898 00000008 R typeinfo for b2ContactFilter
001308a0 00000012 R typeinfo name for b2ContactFilter
001308b4 00000014 R vtable for b2ContactFilter
001308c8 0000000b V typeinfo name for b2Contact
001308d4 00000008 V typeinfo for b2Contact
001308dc 00000014 V vtable for b2Contact
001308f0 0000000c R typeinfo for b2EdgeAndCircleContact
001308fc 00000019 R typeinfo name for b2EdgeAndCircleContact
00130918 00000014 R vtable for b2EdgeAndCircleContact
0013092c 0000000c R typeinfo for b2EdgeAndPolygonContact
00130938 0000001a R typeinfo name for b2EdgeAndPolygonContact
00130954 00000014 R vtable for b2EdgeAndPolygonContact
00130968 0000000c R typeinfo for b2PolygonAndCircleContact
00130974 0000001c R typeinfo name for b2PolygonAndCircleContact
00130990 00000014 R vtable for b2PolygonAndCircleContact
001309a4 0000000c R typeinfo for b2PolygonContact
001309b0 00000013 R typeinfo name for b2PolygonContact
001309c4 00000014 R vtable for b2PolygonContact
001309d8 0000000c R typeinfo for b2ChainAndCircleContact
001309e4 0000001a R typeinfo name for b2ChainAndCircleContact
00130a00 00000014 R vtable for b2ChainAndCircleContact
00130a14 0000000c R typeinfo for b2ChainAndPolygonContact
00130a20 0000001b R typeinfo name for b2ChainAndPolygonContact
00130a3c 00000014 R vtable for b2ChainAndPolygonContact
00130a50 0000000c R typeinfo for b2CircleContact
00130a5c 00000012 R typeinfo name for b2CircleContact
00130a70 00000014 R vtable for b2CircleContact
00130a84 0000000c R typeinfo for b2EdgeShape
00130a90 0000000e R typeinfo name for b2EdgeShape
00130aa0 00000028 R vtable for b2EdgeShape
00130ac8 R render2d_shbin
00130c54 R render2d_shbin_end
00130c54 R render2d_shbin_size
00130c58 00000004 r depthFmtSizes
00130c5c 00000005 r colorFmtSizes
00130c64 00000010 r CSWTCH.11
00130c9c 00000008 r morton_y.2
00130ca4 00000008 r morton_x.3
00130cac 00000008 r s_sleepWakeEvents.4
00130cb4 00000030 r error_table
00130ce4 00000080 r archive_devoptab
00130d64 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00130d88 0000000c R typeinfo for __cxxabiv1::__class_type_info
00130d94 0000002c R vtable for __cxxabiv1::__class_type_info
00130dc0 0000000d R typeinfo name for std::exception
00130dd0 00000008 R typeinfo for std::exception
00130dd8 00000012 R typeinfo name for std::bad_exception
00130dec 0000000c R typeinfo for std::bad_exception
00130df8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00130e18 00000008 R typeinfo for __cxxabiv1::__forced_unwind
00130e20 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
00130e44 00000008 R typeinfo for __cxxabiv1::__foreign_exception
00130e4c 00000014 R vtable for std::bad_exception
00130e74 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
00130e9c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00130ea8 0000002c R vtable for __cxxabiv1::__si_class_type_info
00130ed4 0000000d R typeinfo name for std::type_info
00130ee4 00000008 R typeinfo for std::type_info
00130eec 0000000d R typeinfo name for std::bad_alloc
00130efc 0000000c R typeinfo for std::bad_alloc
00130f08 00000014 R vtable for std::bad_alloc
00130f1c 00000027 V typeinfo name for __gnu_cxx::__concurrence_lock_error
00130f44 0000000c V typeinfo for __gnu_cxx::__concurrence_lock_error
00130f50 00000029 V typeinfo name for __gnu_cxx::__concurrence_unlock_error
00130f7c 0000000c V typeinfo for __gnu_cxx::__concurrence_unlock_error
00130f88 00000014 V vtable for __gnu_cxx::__concurrence_lock_error
00130f9c 00000014 V vtable for __gnu_cxx::__concurrence_unlock_error
00130fb0 00000060 R __inv_pio4
00131010 000000e0 R __sincosf_table
00131110 00000101 R _ctype_
00131214 0000006c R __action_table
00131280 0000006c R __state_table
001312ec 00000100 R __chclass
001313ec 0000000c r p05.0
001313f8 00000028 R __mprec_bigtens
00131420 000000c8 R __mprec_tens
00131610 00000010 r zeroes.0
00131620 00000010 r blanks.1
0013171c 00000010 r zeroes.0
0013172c 00000010 r blanks.1
0013173c 00000080 R dotab_stdnull
001317bc R __tdata_align
001317c0 r __EH_FRAME_BEGIN__
00131a60 R __exidx_start
00131fe0 R __exidx_end
00132000 00000004 D b2_defaultFilter
00132004 00000004 D b2_defaultListener
00132008 00000001 D g_blockSolve
0013200c 00000008 d framerateCounter
00132014 00000004 d framerate
00132018 00000004 d queueLock
0013201c 00000004 d aptChainloadDeliverArgSize
00132020 00000004 d kCount
00132024 00000004 d kInterval
00132028 00000004 d kDelay
0013202c W __stacksize__
00132030 00000004 D __cxxabiv1::__unexpected_handler
00132034 00000004 D __cxxabiv1::__terminate_handler
00132038 00000004 D _impure_ptr
00132040 00000120 D _impure_data
00132160 0000000c D __sglue
0013216c 00000004 D __malloc_sbrk_base
00132170 00000004 D __malloc_trim_threshold
00132178 00000408 D __malloc_av_
00132580 0000016c D __global_locale
001326ec 00000004 D environ
001326f0 00000400 d _current_working_directory
00132af0 00001000 d handles
00133af0 0000000c d __stderr_handle
00133afc 0000000c d __stdout_handle
00133b08 0000000c d __stdin_handle
00133b14 0000008c D devoptab_list
00133ba0 00000004 d defaultDevice
00133bac d _GLOBAL_OFFSET_TABLE_
00133bb8 d __frame_dummy_init_array_entry
00133bb8 D __init_array_start
00133bb8 B __preinit_array_end
00133bb8 B __preinit_array_start
00133bb8 D __tdata_lma
00133bb8 D __tdata_lma_end
00133bcc d __do_global_dtors_aux_fini_array_entry
00133bcc D __fini_array_start
00133bcc D __init_array_end
00133bd4 D __bss_start__
00133bd4 b completed.1
00133bd4 D __fini_array_end
00133bd8 b object.0
00133bf0 00000281 b b2_sizeMap
00133e74 00000004 B b2_gjkCalls
00133e78 00000004 B b2_gjkIters
00133e7c 00000004 B b2_gjkMaxIters
00133e80 00000004 B b2_toiCalls
00133e84 00000004 B b2_toiIters
00133e88 00000004 B b2_toiMaxIters
00133e8c 00000004 B b2_toiMaxRootIters
00133e90 00000004 B b2_toiMaxTime
00133e94 00000004 B b2_toiRootIters
00133e98 00000004 B b2_toiTime
00133e9c 00000008 B b2Vec2_zero
00133ea4 000000c0 B b2Contact::s_registers
00133f64 00000001 B b2Contact::s_initialized
00133f68 000005a8 B __C2Di_Context
00134510 00000040 b s_projBot
00134550 00000040 b s_projTop
00134590 00000004 b uLoc_mdlvMtx
00134594 00000004 b uLoc_projMtx
00134598 00000004 b s_glyphSheets
0013459c 00000004 b s_textScale
001345a0 0000000c b hookCookie
001345b0 000002d0 B __C3D_Context
00134880 00000004 b frameEndCbData
00134884 00000004 b frameEndCb
00134888 00000008 b frameCounter
00134890 00000001 b isTopStereo
00134891 00000001 b needSwapBot
00134892 00000001 b needSwapTop
00134893 00000001 b measureGpuTime
00134894 00000001 b inSafeTransfer
00134895 00000001 b inFrame
00134898 00000010 b cpuTime
001348a8 00000010 b gpuTime
001348b8 0000000c b linkedTarget
001348c4 00000004 b lastTarget
001348c8 00000004 b firstTarget
001348cc 00000008 b C3Di_IVUnifEverDirty
001348d4 000000c0 b C3Di_FVUnifEverDirty
00134994 00000018 b C3Di_ShaderFVecData
001349ac 00000002 B C3D_BoolUnifsDirty
001349b0 00000008 B C3D_IVUnifDirty
001349b8 000000c0 B C3D_FVUnifDirty
00134a78 00000004 B C3D_BoolUnifs
00134a7c 00000020 B C3D_IVUnif
00134a9c 00000c00 B C3D_FVUnif
001356a0 00000008 b sLinearPool
001356a8 0000000c b sAddrMap
001356b8 00000008 b sVramPoolB
001356c0 00000008 b sVramPoolA
001356c8 0000000c b sAddrMap
001356d4 00000004 b sharedFontAddr
001356d8 00000004 B g_sharedFont
001356dc 00000004 b screenAlloc
001356e0 00000004 b screenFree
001356e4 00000002 b gfxIsDoubleBuf
001356e8 00000002 b gfxCurBuf
001356ea 00000001 b gfxIsVram
001356eb 00000001 b gfxTopMode
001356ec 00000002 b gfxFramebufferFormats
001356f0 00000004 b gfxBottomFramebufferMaxSize
001356f4 00000004 b gfxTopFramebufferMaxSize
001356f8 00000008 b gfxBottomFramebuffers
00135700 00000008 b gfxTopFramebuffers
00135708 00000001 V __ctru_speedup
0013570c 00000004 B gpuCmdBufOffset
00135710 00000004 B gpuCmdBufSize
00135714 00000004 B gpuCmdBuf
00135718 00000004 b boundQueue
0013571c 00000001 b shouldStop
0013571d 00000001 b isRunning
0013571e 00000001 b isActive
00135720 00000004 b curQueue
00135724 00000001 b flagValue.0
00135725 00000001 b flagInit.1
00135728 00000004 b serviceName.6
0013572c 00000001 b aptChainloadFlags
0013572d 00000001 b aptChainloadMediatype
00135730 00000020 b aptChainloadHmac
00135750 00000300 b aptChainloadDeliverArg
00135a50 00000008 b aptChainloadTid
00135a58 00001000 b aptParameters
00136a58 00000004 b aptFlags
00136a5c 00000001 b aptHomeButtonState
00136a60 00000004 b aptMessageFuncData
00136a64 00000004 b aptMessageFunc
00136a68 0000000c b aptFirstHook
00136a74 00000001 b aptEventHandlerThreadQuit
00136a78 00000004 b aptEventHandlerThread
00136a7c 00000008 b aptSleepEvent
00136a84 00000008 b aptReceiveEvent
00136a8c 00000008 b aptEvents
00136a94 00000004 b aptLockHandle
00136a98 00000004 b aptRefCount
00136a9c 00000004 b cfguRefCount
00136aa0 00000004 b cfguHandle
00136aa8 00000080 b fsExemptArchives
00136b28 00000004 b fsuRefCount
00136b2c 00000004 b fsuHandle
00136b30 00000007 b gspEventCbOneShot
00136b38 0000001c b gspEventCbData
00136b54 0000001c b gspEventCb
00136b70 00000038 b gspEvents
00136ba8 00000004 b gspLastEvent
00136bac 00000001 b gspRunEvents
00136bb0 00000004 b gspEventThread
00136bb4 00000004 b gspEvent
00136bb8 00000001 b gspGpuRight
00136bb9 00000001 b gspThreadId
00136bbc 00000004 b gspSharedMem
00136bc0 00000004 b gspSharedMemHandle
00136bc4 00000004 b gspRefCount
00136bc8 00000004 b gspGpuHandle
00136bcc 00000001 b usingIrrst
00136bd0 00000004 b hidRefCount
00136bd4 00000006 b gRate
00136bdc 00000006 b aVec
00136be4 00000004 b cPos
00136be8 00000004 b tPos
00136bec 00000004 b kRepeat
00136bf0 00000004 b kUp
00136bf4 00000004 b kDown
00136bf8 00000004 b kHeld
00136bfc 00000004 b kOld
00136c00 00000004 B hidSharedMem
00136c04 00000014 B hidEvents
00136c18 00000004 B hidMemHandle
00136c1c 00000004 B hidHandle
00136c20 00000004 b irrstRefCount
00136c24 00000004 b csPos
00136c28 00000004 b kHeld
00136c2c 00000004 B irrstSharedMem
00136c30 00000004 B irrstEvent
00136c34 00000004 B irrstMemHandle
00136c38 00000004 B irrstHandle
00136c3c 00000004 b ptmSysmRefCount
00136c40 00000004 b ptmSysmHandle
00136c44 00000004 V __ctru_linear_heap_size
00136c48 00000004 V __ctru_heap_size
00136c4c 00000004 B __ctru_linear_heap
00136c50 00000004 B __ctru_heap
00136c54 00000004 B __system_retAddr
00136c58 00000004 B __system_argv
00136c5c 00000004 B __system_argc
00136c60 b saved_stack
00136c68 00000004 B __3dslink_host
00136c6c 00000004 b srvRefCount
00136c70 00000004 b srvHandle
00136c74 00000004 b arbiter
00136c78 00000004 b currentAddr
00136c7c 00000004 b maxAddr
00136c80 00000004 b minAddr
00136c84 00000004 b srvPmHandle
00136c88 000005c0 b archive_devices
00137248 00000004 b archive_device_cwd
0013724c 00000001 b archive_initialized
00137250 00000004 b init
00137254 00000001 B __eh_globals_init::_S_init
00137258 0000000c b (anonymous namespace)::eh_globals
00137268 0000001c b (anonymous namespace)::emergency_pool
00137284 00000004 b (anonymous namespace)::__new_handler
00137288 0000000c b __sfp_recursive_mutex
00137298 00000168 B __sf
00137400 00000004 B __stdio_exit_handler
00137404 00000028 B __malloc_current_mallinfo
0013742c 00000004 B __malloc_max_total_mem
00137430 00000004 B __malloc_max_sbrked_mem
00137434 00000004 B __malloc_top_pad
00137438 0000000c b __malloc_recursive_mutex
00137444 0000000c b __env_recursive_mutex
00137450 00000004 b initial_env
00137454 00000400 b temp_cwd
00137854 00000004 b __hndl_lock
00137858 00000004 B fake_heap_start
0013785c 00000004 B fake_heap_end
00137860 00000004 b heap_start.0
00137864 B __tls_start
0013846c B __bss_end__
0013846c A __end__
0013846c B __tls_end
